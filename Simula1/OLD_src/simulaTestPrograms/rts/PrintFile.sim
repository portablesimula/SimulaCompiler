
%STANDARDCLASS

OutFile class PrintFile_;
begin integer LINES_PER_PAGE_, SPACING_, LINE_;

      integer procedure line; line:=LINE_;
      
      procedure lines_per_page(n); integer n; LINES_PER_PAGE_:=n;
      
      procedure spacing(n); integer n; SPACING_ := n;
      
      procedure eject(n); integer n;
      begin if not OPEN_ then error("File is not opened");
            if n > LINES_PER_PAGE_ then n:=1;
            ! Implementation dependent ;
            LINE_ := n;
      end eject;      

      boolean procedure open(IMAGE_); Text IMAGE_;
      if not OPEN_ then
      begin
            OPEN_:=true;
            image:-IMAGE_;
            image:=notext;
            setpos(1); eject(1);
            open:=true;
      end open;
      
      boolean procedure close;
      if OPEN_ then
      begin OPEN_:=false
            if pos <> 1 then outimage;
            image:-notext;
            SPACING_ := 1;
            eject(LINES_PER_PAGE_);
            LINES_PER_PAGE_ := 0;
            LINE_ :=0;
            close:=true;
      end;
      
      procedure outimage;
      if not OPEN_ then error("File is not opened")
      else begin
            if LINE_ > LINES_PER_PAGE_ then eject(1);
            ! Output the image on the line denoted by LINE_;
            LINE_ := LINE_ + SPACING_;
            image := notext;
            setpos(1);
      end outimage; 
      
      procedure outrecord;
      if not OPEN_ then  error("File is not opened")
      else begin
            if LINE_ > LINES_PER_PAGE_ then eject(1);
            ! output image.sub(1,pos-1) on the line indicated by LINE_;
            LINE_ := LINE_ + SPACING_;
            setpos(1)
      end outrecord;
      
      LINES_PER_PAGE_ := 132;
      SPACING_ := 1;     
	  
end PrintFile;
