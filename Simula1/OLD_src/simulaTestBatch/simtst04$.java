package simulaTestBatch;
// Simula-2.0 Compiled at Fri Oct 30 10:14:47 CET 2020
import simula.runtime.*;
@SuppressWarnings("unchecked")
public final class simtst04$ extends BASICIO$ {
    int found_error=0;
    boolean verbose=false;
    TXT$ txt=null;
    int intr=0;
    int sho=0;
    float rea=0.0f;
    double lon=0.0d;
    int realprecision=0;
    int longprecision=0;
    public simtst04$(RTObject$ staticLink) {
        super(staticLink);
        BBLK();
        BPRG("simtst04$");
    }
    public RTObject$ STM$() {
        if(VALUE$(verbose)) {
            {
                sysout().outtext(new TXT$("--- START Simula a.s. TEST 4"));
                sysout().outimage();
                sysout().outtext(new TXT$("--- Test reading numbers from source text"));
                sysout().outimage();
                sysout().outimage();
            }
        }
        txt=blanks(30);
        realprecision=7;
        longprecision=16;
        TXT$.putint(txt,realprecision);
        new simtst04$$test((CUR$),new TXT$("integer operation (1)."),txt,new TXT$("                             7"));
        TXT$.putint(txt,longprecision);
        new simtst04$$test((CUR$),new TXT$("integer operation (2)."),txt,new TXT$("                            16"));
        intr=123456;
        TXT$.putint(txt,intr);
        new simtst04$$test((CUR$),new TXT$("integer operation (3)."),txt,new TXT$("                        123456"));
        intr=((ENVIRONMENT$)CTX$).maxint;
        TXT$.putint(txt,intr);
        new simtst04$$test((CUR$),new TXT$("integer operation (4)."),txt,new TXT$("                    2147483647"));
        TXT$.putint(txt,0);
        new simtst04$$test((CUR$),new TXT$("integer operation (6)."),txt,new TXT$("                             0"));
        intr=((ENVIRONMENT$)CTX$).minint;
        TXT$.putint(txt,intr);
        new simtst04$$test((CUR$),new TXT$("integer operation (7)."),txt,new TXT$("                   -2147483648"));
        TXT$.putint(txt,(-(0)));
        new simtst04$$test((CUR$),new TXT$("integer operation (8)."),txt,new TXT$("                             0"));
        TXT$.putint(txt,sho);
        new simtst04$$test((CUR$),new TXT$("short integer operation (1)."),txt,new TXT$("                             0"));
        sho=32767;
        TXT$.putint(txt,sho);
        new simtst04$$test((CUR$),new TXT$("short integer operation (2)."),txt,new TXT$("                         32767"));
        sho=13;
        TXT$.putint(txt,sho);
        new simtst04$$test((CUR$),new TXT$("short integer operation (4)."),txt,new TXT$("                            13"));
        sho=(-(32768));
        TXT$.putint(txt,sho);
        new simtst04$$test((CUR$),new TXT$("short integer operation (5)."),txt,new TXT$("                        -32768"));
        rea=123456.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (1)."),txt,new TXT$("                  1.234560&+05"));
        rea=3.4028235E38f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (2)."),txt,new TXT$("                  3.402823&+38"));
        rea=((float)((-(3))));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (3)."),txt,new TXT$("                 -3.000000&+00"));
        rea=0.8888889f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (4)."),txt,new TXT$("                  8.888889&-01"));
        rea=0.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (5)."),txt,new TXT$("                  0.000000&+00"));
        rea=(-(1.192093E-7f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (6)."),txt,new TXT$("                 -1.192093&-07"));
        rea=0.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (7)."),txt,new TXT$("                  0.000000&+00"));
        rea=1235.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (8)."),txt,new TXT$("                  1.235000&+03"));
        rea=(-(3.4028235E38f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (9)."),txt,new TXT$("                 -3.402823&+38"));
        rea=1000.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (10)."),txt,new TXT$("                  1.000000&+03"));
        TXT$.putreal(txt,1.0E20f,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (11)."),txt,new TXT$("                  1.000000&+20"));
        rea=1.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (12)."),txt,new TXT$("                  1.000000&+00"));
        TXT$.putreal(txt,1000000.0f,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (13)."),txt,new TXT$("                  1.000000&+06"));
        rea=10.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (14)."),txt,new TXT$("                  1.000000&+01"));
        TXT$.putreal(txt,1.0E-37f,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (15)."),txt,new TXT$("                  1.000000&-37"));
        rea=(-(100.0f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (16)."),txt,new TXT$("                 -1.000000&+02"));
        rea=(-(1.0E35f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (17)."),txt,new TXT$("                 -1.000000&+35"));
        rea=(-(0.01f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (18)."),txt,new TXT$("                 -1.000000&-02"));
        TXT$.putreal(txt,3.4028235E38f,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (19)."),txt,new TXT$("                  3.402823&+38"));
        rea=1.23456794E9f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (20)."),txt,new TXT$("                  1.234568&+09"));
        rea=3.333E-5f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (21)."),txt,new TXT$("                  3.333000&-05"));
        rea=2.2222223E-38f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (22)."),txt,new TXT$("                  2.222222&-38"));
        rea=5.5555556E7f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (23)."),txt,new TXT$("                  5.555556&+07"));
        rea=(-(1.0E12f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (24)."),txt,new TXT$("                 -1.000000&+12"));
        rea=(-(0.0f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (25)."),txt,new TXT$("                  0.000000&+00"));
        rea=3333333.2f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (26)."),txt,new TXT$("                  3.333333&+06"));
        rea=7.777778E-11f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (27)."),txt,new TXT$("                  7.777778&-11"));
        rea=1.1111111E-5f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (28)."),txt,new TXT$("                  1.111111&-05"));
        rea=(-(0.6666667f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (29)."),txt,new TXT$("                 -6.666667&-01"));
        rea=1.192093E-9f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (30)."),txt,new TXT$("                  1.192093&-09"));
        rea=0.0f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (31)."),txt,new TXT$("                  0.000000&+00"));
        rea=1.2345678E32f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (32)."),txt,new TXT$("                  1.234568&+32"));
        rea=1.1111112f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (33)."),txt,new TXT$("                  1.111111&+00"));
        rea=1.2345679E-6f;
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (34)."),txt,new TXT$("                  1.234568&-06"));
        rea=(-(3.4028235E38f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (35)."),txt,new TXT$("                 -3.402823&+38"));
        rea=(-(300000.0f));
        TXT$.putreal(txt,rea,realprecision);
        new simtst04$$test((CUR$),new TXT$("real operation (36)."),txt,new TXT$("                 -3.000000&+05"));
        lon=1.2345678912345678E16d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (1)."),txt,new TXT$("        1.234567891234568&+016"));
        lon=1.797693134862315E308d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (2)."),txt,new TXT$("        1.797693134862315&+308"));
        TXT$.putreal(txt,0.8888888888888888d,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (3)."),txt,new TXT$("        8.888888888888888&-001"));
        lon=0.0d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (4)."),txt,new TXT$("        0.000000000000000&+000"));
        lon=(-(2.220446049250313E-18d));
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (5)."),txt,new TXT$("       -2.220446049250313&-018"));
        lon=1234.999999991111d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (6)."),txt,new TXT$("        1.234999999991111&+003"));
        lon=1000.0d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (7)."),txt,new TXT$("        1.000000000000000&+003"));
        TXT$.putreal(txt,1.0d,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (8)."),txt,new TXT$("        1.000000000000000&+000"));
        lon=10.0d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (9)."),txt,new TXT$("        1.000000000000000&+001"));
        TXT$.putreal(txt,1.797693134862315E308d,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (10)."),txt,new TXT$("        1.797693134862315&+308"));
        lon=1.23456789123456794E18d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (11)."),txt,new TXT$("        1.234567891234568&+018"));
        lon=(-(1.0E22d));
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (12)."),txt,new TXT$("       -1.000000000000000&+022"));
        lon=7.0E-11d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (13)."),txt,new TXT$("        7.000000000000000&-011"));
        lon=1.1111111111111112E-5d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (14)."),txt,new TXT$("        1.111111111111111&-005"));
        lon=1.234567891111111E32d;
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (15)."),txt,new TXT$("        1.234567891111111&+032"));
        lon=(-(1.797693134862315E308d));
        TXT$.putreal(txt,lon,longprecision);
        new simtst04$$test((CUR$),new TXT$("long real operation (16)."),txt,new TXT$("       -1.797693134862315&+308"));
        if(VALUE$((found_error>(0)))) {
            sysout().outint(found_error,4);
        } else
        sysout().outtext(new TXT$("--- NO"));
        sysout().outtext(new TXT$(" ERRORS FOUND IN TEST 4"));
        if(VALUE$(verbose)) {
            {
                sysout().outtext(new TXT$("--- END Simula a.s. TEST 4"));
                sysout().outimage();
            }
        }
        EBLK();
        return(this);
    }
    
    public static void main(String[] args) {
        RT.setRuntimeOptions(args);
        new simtst04$(CTX$).STM$();
    }
    public static PROGINFO$ INFO$=new PROGINFO$("simtst04.sim","SimulaProgram simtst04$",1,29,8,30,10,32,12,35,14,36,16,37,18,38,20,40,22,41,30,61,32,62,35,63,37,64,39,65,44,68,46,70,48,73,50,75,52,76,54,78,56,80,58,85,60,86,62,87,64,89,66,90,68,91,70,93,72,94,74,96,76,97,78,98,80,100,82,101,84,107,86,108,88,110,90,111,92,114,94,116,96,117,98,118,100,120,102,121,104,123,106,129,108,130,110,131,112,138,114,141,116,142,118,144,120,145,122,146,124,148,126,149,128,150,130,152,132,153,134,154,136,161,138,164,140,165,142,167,144,168,146,169,148,171,150,172,152,173,154,180,156,183,158,184,160,186,162,187,164,188,166,190,168,191,170,193,172,194,174,195,176,197,178,198,180,200,182,201,184,202,186,204,188,205,190,207,192,208,194,209,196,211,198,212,200,213,202,215,204,216,206,217,208,223,210,224,212,226,214,227,216,228,218,230,220,231,222,232,224,234,226,235,228,236,230,238,232,239,234,240,236,242,238,243,240,244,242,246,244,247,246,248,248,250,250,251,252,252,254,254,256,255,258,256,260,258,262,259,264,260,266,262,268,263,270,264,272,272,274,273,276,274,278,276,280,277,282,278,284,280,286,281,288,282,290,284,292,285,294,286,296,288,298,289,300,290,302,297,304,298,306,299,308,301,310,302,312,303,314,308,316,309,318,310,320,317,322,320,324,321,326,323,328,324,330,326,332,327,334,328,336,335,338,338,340,339,342,341,344,342,346,343,348,345,350,346,352,347,354,349,356,350,358,352,360,353,362,354,364,362,366,363,368,365,370,366,372,367,374,369,376,370,378,371,380,373,382,374,384,375,386,377,388,378,390,379,392,381,394,382,396,383,398,390,400,391,402,392,404,395,409,396,411,397,413,398,416,399,427,402);
}
