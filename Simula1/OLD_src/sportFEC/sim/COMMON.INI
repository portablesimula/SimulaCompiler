%title ******   SYMBOL  TABLE  INITIALISATION   ******

       dummyBox:-new identsymbol;

       dummygroup:-new symbolgroup;
       for i:=0 step 1 until 255 do dummyGroup.val(i):-dummyBox;
       for i:=0 step 1 until 127 do symtab(i):-dummyGroup;
%      identhi:=identlo:=NUL;

       symtab(0):-new symbolGroup; symtab(0).val(0):-dummyBox;
       for simsymbol:-

%-A      "boolean",     "character",   "short",       "integer",
%-A      "real",        "long",        "ref",         "text",
%-A      " pointer",
%-A      "value",       "label",       "procedure",   "array",
%-A      "no type",     "else",        "end",         "eqv",
%-A      "external",    "for",         "go",          "goto",
%-A      "hidden",      "if",          "imp",         "in",
%-A      "inner",       "inspect",     "do",          "is",
%-A      "class",
%-A      "record",
%-A                     "begin",       "name",        "new",
%-A      "not",         "or",          "otherwise",   "prior",
%-A      "delay",       "protected",   "qua",         "reactivate",
%-A      "at",          "before",      "and",         "step",
%-A      "switch",      "activate",    "then",        "this",
%-A      "to",          "until",       "after",       "virtual",
%-A      "when",        "while",       "lt",          "eq",
%-A      "le",          "gt",          "ne",          "ge",
%-A      "comment",     "none",        "notext",      "true",
%-A      "false",

%          ==========   end SIMULA key words   ==============

%-A                     "detach",      "printfile",   "infile",
%-A      "_errid",      "_text",       "_predefmodule",
%-A      "match stat",  " record",
%-A      "c",           "pascal",      "library"

%          ==========   end SIMULA identifers   =============

%+A      "record",      "lshiftl",     "PREFIX",      "ATTR",
%+A      "lshifta",     "REP",         "ALT",         "FIXREP",
%+A      "ENDRECORD",   "C-RECORD",    "TEXT",        "C-CHAR",
%+A      "C-INT",       "C-SIZE",      "C-REAL",      "C-LREAL",
%+A      "C-AADDR",     "C-OADDR",     "C-GADDR",     "C-PADDR",
%+A      "C-DOT",       "C-RADDR",     "nobody",      "ANONE",
%+A      "ONONE",       "GNONE",       "nowhere",     "true",
%+A      "false",       "profile",     "known",       "system",
%+A      "external",    "import",      "export",      "exit",
%+A      "ENDPROFILE",  "ROUTINESPEC", "routine",     "LOCAL",
%+A      "ENDROUTINE",  "module",      "EXISTING",    "TAG",
%+A      "body",        "ENDMODULE",   "LABELSPEC",   "label",
%+A      "range",       "global",      "INIT",        "CONSTSPEC",
%+A      "const",       "DELETE",      "FDEST",       "BDEST",
%+A      "SAVE",        "RESTORE",     "BSEG",        "ESEG",
%+A      "SKIPIF",      "endskip",     "if",          "else",
%+A      "endif",       "rshiftl",     "PRECALL",     "ASSPAR",
%+A      "ASSREP",      "call",        "FETCH",       "REFER",
%+A      "DEREF",       "SELECT",      "REMOTE",      "LOCATE",
%+A      "INDEX",       "INCO",        "DECO",        "PUSH",
%+A      "PUSHC",       "PUSHLEN",     "DUP",         "POP",
%+A      "EMPTY",       "SETOBJ",      "GETOBJ",      "ACCESS",
%+A      "FJUMP",       "BJUMP",       "FJUMPIF",     "BJUMPIF",
%+A      "SWITCH",      "goto",        "T-INITO",     "T-GETO",
%+A      "T-SETO",      "ADD",         "SUB",         "MULT",
%+A      "DIV",         "rem",         "NEG",         "and",
%+A      "or",          "xor",         "IMP",         "EQV",
%+A      "not",         "DIST",        "ASSIGN",      "UPDATE",
%+A      "CONVERT",     "sysinsert",   "insert",      "ZEROAREA",
%+A      "INITAREA",    "COMPARE",     "?LT",         "?LE",
%+A      "?EQ",         "?GE",         "?GT",         "?NE",
%+A      "EVAL",        "info",        "LINE",        "SETSWITCH",
%+A      "rshifta",     "PROGRAM",     "MAIN",        "ENDPROGRAM",
%+A      "DSIZE",       "SDEST",       "RUPDATE",     "ASSCALL",
%+A      "CALL-TOS",    "DINITAREA",   "nosize",      "POPALL",
%+A      "REPCALL",     "INTERFACE",   "macro",       "MARK",
%+A      "MPAR",        "endmacro",    "MCALL",       "PUSHV",
%+A      "SELECTV",     "REMOTEV",     "INDEXV",      "ACCESSV",
%+A      "DECL",        "STMT",        "begin",       "end",
%+A      "variant",     "short",       "long",        "integer",
%+A      "size",        "real",        "character",   "boolean",
%+A      "ref",         "name",        "field",       "infix",
%+A      "entry",       "none",        "noname",      "nofield",
%+A      "then",        "elsif",       "qua",         "var",
%+A      "repeat",      "while",       "do",          "endrepeat",
%+A      "sysroutine",  "define",      "case",        "when",
%+A      "otherwise",   "endcase",     "visible",     "assert",
%+A      "skip",        "INTVAL",      "REALVAL",     "LREALVAL",
%+A      "STRING",      "COLON",       "LPAR",        "RPAR",
%+A      "COMMA",       "DOT",         "ADDRESS",     "CHARS",
%+A      "PERCENT",     "TRACE",       "NOEXPR",      "VARID",
%+A      "VAREXPR",     "VARCALL",     "ARGLIST",     "ENDVAR",
%+A      "IFEXPR",      "REPEXPR",     "DEFLAB",      "STRUCT",
%+A      "ENDWHEN",     "SIMPLE",      "DOTVAR",      "IDENTIFIER"

%        ======   end Simuletta keywords and debug symbols   ======

       do begin  hashlo:=char(hash(
%+A        if simsymbol.getchar<='Z' then lowcase(copy(simsymbol)) else
                             simsymbol));
           inspect new identsymbol do begin
                   symbol:-     simsymbol;
                   idlo:=identlo:=char(rank(identlo)+1);
                   next:-hashtab(rank(hashlo));
                   symtab(      0      ).val(rank(identlo)):-
                   hashtab(rank(hashlo)):-this symbolbox;
%+D                if next=/=none and then option(rank('Y'))<>NUL
%+D                then inspect sysout do begin
%+D                   outtext("HASH: collision between " &
%+D                      simsymbol & " and " & next.symbol);
%+D                   outimage end;
           end;
       end;

       !*** init remainder of first symtab entry ***;

       i:=rank(identlo)+1;
       while i<=255 do begin
          symtab(0).val(i):-dummyBox; i:=i+1 end;

       consthi:='!128!';  !constlo:=NUL;

       simsymbol:-"0";  DEFCONST;

%+D %-A  DB(rank(IBOOL)) :- "BOOL";
%+D %-A  DB(rank(ICHAR)) :- "CHAR";
%+D %-A  DB(rank(ISHOR)) :- "SHOR";
%+D %-A  DB(rank(IINTG)) :- "INTG";
%+D %-A  DB(rank(IREAL)) :- "REAL";
%+D %-A  DB(rank(ILONG)) :- "LONG";
%+D %-A  DB(rank(IREF )) :- " REF";
%+D %-A  DB(rank(ITEXT)) :- "TEXT";
%+D %-A  DB(rank(IPTR )) :- "PTR ";
%+D %-A  DB(rank(IVALU)) :- "VALU";
%+D %-A  DB(rank(ILABE)) :- "LABE";
%+D %-A  DB(rank(IPROC)) :- "PROC";
%+D %-A  DB(rank(IARRA)) :- "ARRA";
%+D %-A  DB(rank(INOTY)) :- "NOTY";
%+D %-A  DB(rank(IELSE)) :- "ELSE";
%+D %-A  DB(rank(IEND )) :- " END";
%+D %-A  DB(rank(IEQV )) :- " EQV";
%+D %-A  DB(rank(IEXTR)) :- "EXTR";
%+D %-A  DB(rank(IFOR )) :- " FOR";
%+D %-A  DB(rank(IGO  )) :- "  GO";
%+D %-A  DB(rank(IGOTO)) :- "GOTO";
%+D %-A  DB(rank(IHIDD)) :- "HIDD";
%+D %-A  DB(rank(IIF  )) :- "  IF";
%+D %-A  DB(rank(IIMP )) :- " IMP";
%+D %-A  DB(rank(IIN  )) :- "  IN";
%+D %-A  DB(rank(IINNE)) :- "INNE";
%+D %-A  DB(rank(IINSP)) :- "INSP";
%+D %-A  DB(rank(IDO  )) :- "  DO";
%+D %-A  DB(rank(IIS  )) :- "  IS";
%+D %-A  DB(rank(ICLAS)) :- "CLAS";
%+D %-A  DB(rank(IRCRD)) :- "RCRD";
%+D %-A  DB(rank(IBEGI)) :- "BEGI";
%+D %-A  DB(rank(INAME)) :- "NAME";
%+D %-A  DB(rank(INEW )) :- " NEW";
%+D %-A  DB(rank(INOT )) :- " NOT";
%+D %-A  DB(rank(IOR  )) :- "  OR";
%+D %-A  DB(rank(IOTHW)) :- "OTHW";
%+D %-A  DB(rank(IPRIO)) :- "PRIO";
%+D %-A  DB(rank(IDELA)) :- "DELA";
%+D %-A  DB(rank(IPRTC)) :- "PRTC";
%+D %-A  DB(rank(IQUA )) :- " QUA";
%+D %-A  DB(rank(IREAC)) :- "REAC";
%+D %-A  DB(rank(IAT  )) :- "  AT";
%+D %-A  DB(rank(IBEFO)) :- "BEFO";
%+D %-A  DB(rank(IAND )) :- " AND";
%+D %-A  DB(rank(ISTEP)) :- "STEP";
%+D %-A  DB(rank(ISWIT)) :- "SWIT";
%+D %-A  DB(rank(IACTV)) :- "ACTV";
%+D %-A  DB(rank(ITHEN)) :- "THEN";
%+D %-A  DB(rank(ITHIS)) :- "THIS";
%+D %-A  DB(rank(ITO  )) :- "  TO";
%+D %-A  DB(rank(IUNTI)) :- "UNTI";
%+D %-A  DB(rank(IAFTR)) :- "AFTR";
%+D %-A  DB(rank(IVIRT)) :- "VIRT";
%+D %-A  DB(rank(IWHEN)) :- "WHEN";
%+D %-A  DB(rank(IWHIL)) :- "WHIL";
%+D %-A  DB(rank(ILT  )) :- "  LT";
%+D %-A  DB(rank(IEQ  )) :- "  EQ";
%+D %-A  DB(rank(ILE  )) :- "  LE";
%+D %-A  DB(rank(IGT  )) :- "  GT";
%+D %-A  DB(rank(INE  )) :- "  NE";
%+D %-A  DB(rank(IGE  )) :- "  GE";
%+D %-A  DB(rank(ICOMN)) :- "COMN";
%+D %-A  DB(rank(INONE)) :- "NONE";
%+D %-A  DB(rank(INOTE)) :- "NOTE";
%+D %-A  DB(rank(ITRUE)) :- "TRUE";
%+D %-A  DB(rank(IFALS)) :- "FALS";
%+D %-A  DB(rank(IRFEQ)) :- "RFEQ";
%+D %-A  DB(rank(IRFNE)) :- "RFNE";
%+D %-A  DB(rank(IPLUS)) :- "PLUS";
%+D %-A  DB(rank(IMINU)) :- "MINU";
%+D %-A  DB(rank(IMULT)) :- "MULT";
%+D %-A  DB(rank(ISLAS)) :- "SLAS";
%+D %-A  DB(rank(IPOWE)) :- "POWE";
%+D %-A  DB(rank(IIDIV)) :- "IDIV";
%+D %-A  DB(rank(IDOT )) :- " DOT";
%+D %-A  DB(rank(ICL  )) :- "  CL";
%+D %-A  DB(rank(ICOMA)) :- "COMA";
%+D %-A  DB(rank(ISMCL)) :- "SMCL";
%+D %-A  DB(rank(ILFPA)) :- "LFPA";
%+D %-A  DB(rank(IRGPA)) :- "RGPA";
%+D %-A  DB(rank(IASSG)) :- "ASSG";
%+D %-A  DB(rank(IDENO)) :- "DENO";
%+D %-A  DB(rank(ICONC)) :- "CONC";
%+D %-A  DB(rank(ICAND)) :- "CAND";
%+D %-A  DB(rank(ICOR )) :- " COR";
%+D %-A  DB(rank(ICASE)) :- "CASE";
%+D %-A  DB(rank(IEOP )) :- " EOP";
%+D %-A  DB(rank(IROPD)) :- "ROPD";
%+D %-A  DB(rank(IIDN )) :- " IDN";
%+D %-A  DB(rank(ICONS)) :- "CONS";
%+D %-A  DB(rank(IBLKB)) :- "BLKB";
%+D %-A  DB(rank(IBPRF)) :- "BPRF";
%+D %-A  DB(rank(IDCLI)) :- "DCLI";
%+D %-A  DB(rank(IFRMP)) :- "FRMP";
%+D %-A  DB(rank(IABTE)) :- "ABTE";
%+D %-A  DB(rank(IACTE)) :- "ACTE";
%+D %-A  DB(rank(IARGE)) :- "ARGE";
%+D %-A  DB(rank(IARDE)) :- "ARDE";
%+D %-A  DB(rank(IASGE)) :- "ASGE";
%+D %-A  DB(rank(IBLNO)) :- "BLNO";
%+D %-A  DB(rank(IBNDE)) :- "BNDE";
%+D %-A  DB(rank(IBREC)) :- "BREC";
%+D %-A  DB(rank(ICAPE)) :- "CAPE";
%+D %-A  DB(rank(ICONB)) :- "CONB";
%+D %-A  DB(rank(ICONE)) :- "CONE";
%+D %-A  DB(rank(ICPRF)) :- "CPRF";
%+D %-A  DB(rank(ICSPC)) :- "CSPC";
%+D %-A  DB(rank(IDCLA)) :- "DCLA";
%+D %-A  DB(rank(IDCLC)) :- "DCLC";
%+D %-A  DB(rank(IDCLE)) :- "DCLE";
%+D %-A  DB(rank(IDCLP)) :- "DCLP";
%+D %-A  DB(rank(IDCLS)) :- "DCLS";
%+D %-A  DB(rank(IDIME)) :- "DIME";
%+D %-A  DB(rank(IDOTP)) :- "DOTP";
%+D %-A  DB(rank(IEEXP)) :- "EEXP";
%+D %-A  DB(rank(IECWI)) :- "ECWI";
%+D %-A  DB(rank(IELME)) :- "ELME";
%+D %-A  DB(rank(IELSB)) :- "ELSB";
%+D %-A  DB(rank(IEPRM)) :- "EPRM";
%+D %-A  DB(rank(IEREC)) :- "EREC";
%+D %-A  DB(rank(IESTM)) :- "ESTM";
%+D %-A  DB(rank(IEXNM)) :- "EXNM";
%+D %-A  DB(rank(IFASG)) :- "FASG";
%+D %-A  DB(rank(IFDNO)) :- "FDNO";
%+D %-A  DB(rank(IFORE)) :- "FORE";
%+D %-A  DB(rank(IFWHN)) :- "FWHN";
%+D %-A  DB(rank(IGOE )) :- " GOE";
%+D %-A  DB(rank(IIDNP)) :- "IDNP";
%+D %-A  DB(rank(IIFSB)) :- "IFSB";
%+D %-A  DB(rank(IIFSE)) :- "IFSE";
%+D %-A  DB(rank(ILANG)) :- "LANG";
%+D %-A  DB(rank(ILINE)) :- "LINE";
%+D %-A  DB(rank(INEWP)) :- "NEWP";
%+D %-A  DB(rank(IOTHE)) :- "OTHE";
%+D %-A  DB(rank(IPRHI)) :- "PRHI";
%+D %-A  DB(rank(IPSPC)) :- "PSPC";
%+D %-A  DB(rank(ISCST)) :- "SCST";
%+D %-A  DB(rank(ISIDN)) :- "SIDN";
%+D %-A  DB(rank(ISIMU)) :- "SIMU";
%+D %-A  DB(rank(ISSWA)) :- "SSWA";
%+D %-A  DB(rank(ISSWB)) :- "SSWB";
%+D %-A  DB(rank(ISWDE)) :- "SWDE";
%+D %-A  DB(rank(ISWEE)) :- "SWEE";
%+D %-A  DB(rank(ITHSB)) :- "THSB";
%+D %-A  DB(rank(IUMNS)) :- "UMNS";
%+D %-A  DB(rank(IUPLS)) :- "UPLS";
%+D %-A  DB(rank(IVSPC)) :- "VSPC";
