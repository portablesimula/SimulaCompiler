
% ===============================================   Main   program =============
%  PROGRAM NAME:   Simula a.s. - SIMULA TEST NO 133
%
%  PURPOSE:     Test infile reading with inimage and inrecord.
%
%  WRITTEN BY:  MYH
% ==============================================================================
external class SimulaTest;

SimulaTest(133,"--- Test infile reading with inimage and inrecord.") begin

   text fileName="C:/GitHub/SimulaCompiler/SimulaTestBatch/src/simulaTestBatch/files/anyFile133";
   -- The file above should contain the two lines:
   --      12345678901234567890
   --      abcdefghijklmnopqrstuvwAB

   ref(Infile) fil;   
   integer traceCase;
   text array facit(0:9);
   
   procedure trace(msg); text msg;
   begin
      if verbose then begin outtext(msg); outimage; end;
      if msg ne facit(traceCase) then
      begin err("Case " & edit(traceCase));
         outtext("Trace: " & msg); outimage;
         outtext("Facit: " & facit(traceCase)); outimage;
      end;
      traceCase:=traceCase+1;
   end;

   text procedure inrecord; begin
      fil.inrecord;
      fil.image.setpos(1);
      if rank(fil.inchar) = 25 then inrecord:-copy("ABRA")
      else inrecord:-copy(fil.image.strip);
   end;

   text procedure inimage; begin
      fil.inimage;
      inimage:-copy(fil.image.strip);
   end;
   
   facit(0):-"At START";
   facit(1):-"1234567";
   facit(2):-"8901234";
   facit(3):-"567890";
   facit(4):-"abcdefg";
   facit(5):-"hijklmn";
   facit(6):-"opqrstu";
   facit(7):-"vwABstu";
   facit(8):-"ABRA";
   facit(9):-"At END OF TEST";
  
   
      trace("At START");

         fil :- new Infile(fileName);
         if not fil.open(blanks(7)) then
                err("Can't open Infile: " & fileName);
         trace(inrecord);
         trace(inrecord);
         trace(inimage);
         trace(inrecord);
         trace(inrecord);
         trace(inrecord);
         trace(inrecord);
         trace(inrecord);

      trace("At END OF TEST");
   
 end
