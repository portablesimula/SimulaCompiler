
% ====================================   Main   program =============
%  PROGRAM name:   Simula a.s. - SIMULA TEST NO 30
%
%  PURPOSE:     Test name parameters - value type, text, object
%               reference type, and arrays of these types.
%
%  WRITTEN BY:  BEH   21/07-86
% ===================================================================

begin
	integer n=30; text title="--- Test name parameters - value type, text, object reference type, and arrays of these types.";
	
	boolean found_error;
	integer nFailed;
	boolean verbose=false;
	boolean noMessage;

	procedure err(t); text t;
	begin sysout.setpos(1);
	      outtext("*** error: in test "); outtext(t); outimage;
	      found_error:=true; nFailed:=nFailed+1;
	end;


   procedure testvalue (bt, ct, jt, rt, tt, rat, rbt,
                        bv, cv, jv, rv, tv, rav, rbv, errnr) ;
      name bt, ct, jt, rt, tt, rat, rbt ;
      boolean    bt, bv ;
      character  ct, cv ;
      integer    jt, jv ;
      real       rt, rv ;
      text       tt, tv ;
      ref (A)    rat, rav ;
      ref (B)    rbt, rbv ;
      integer errnr ;
   begin
      if     bt eqv bv
         and ct = cv
         and jt = jv
         and rt = rv
         and tt = tv
         and rat.t = rav.t
         and rbt.t = rbv.t then
      else
      begin
         err("value of variables (") ;
         outint (errnr, if errnr < 10 then 1 else 2) ;
         outtext (").") ;
         outimage ;
         outtext ("            Erroneus values :") ;
         outtext (if bt then " true " else " false ") ;
         outchar (ct) ;
         outint (jt, 4) ;
         outimage ;
         outtext ("            ") ;
         outreal (rt, 5, 12) ;
         outtext ("   ") ;
         outtext (tt) ;
         outtext ("   ") ;
         outtext (rat.t) ;
         outtext ("   ") ;
         outtext (rbt.t) ;
         outimage ;
         
      end
   end pros. testvalue ;

   procedure testreference (tt, rat, rbt, tv, rav, rbv, errnr) ;
      text tt, tv ;
      ref (A) rat, rav ;
      ref (B) rbt, rbv ;
      integer errnr ;
   begin
      if     tt == tv
         and rat == rav
         and rbt == rbv then
      else
      begin
         err("Reference (") ;
         outint (errnr, if errnr < 10 then 1 else 2) ;
         outtext (").") ;
         outimage ;
         outtext ("            Erroneus values : ") ;
         outimage ;
         outtext ("            ") ;
         outtext (tt) ;
         outtext ("   ") ;
         outtext (rat.t) ;
         outtext ("   ") ;
         outtext (rbt.t) ;
         outimage ;
         
      end ;
   end pros. testreference ;


   procedure test1arrayvalue (b, c, i, r, t, ra, rb,
                              bv, cv, iv, rv, tv, rav, rbv, errnr) ;
      name b, c, i, r, t, ra, rb ;

      boolean array   b ;  boolean   bv ;
      character array c ;  character cv ;
      integer array   i ;  integer   iv ;
      real array      r ;  real      rv ;
      text array      t ;  text      tv ;
      ref (A) array  ra ;  ref (A)  rav ;
      ref (B) array  rb ;  ref (B)  rbv ;
      integer errnr ;
   begin
      if     b (0) eqv bv
         and c (0) = cv
         and i (0) = iv
         and r (0) = rv
         and ra (0).t = rav.t
         and rb (0).t = rbv.t then
      else
      begin
         err("array values (") ;
         outint (errnr, if errnr < 10 then 1 else 2) ;
         outtext (").") ;
         outimage ;
         outtext ("            Erroneus values : ") ;
         outimage ;
         outtext ("            ") ;
         outtext (if b (0) then "true " else "false ") ;
         outchar (c (0)) ;
         outint (i (0), 6) ;
         outreal (r (0), 5, 12) ;
         outimage ;
         outtext ("            ") ;
         outtext (t (0)) ;
         outtext ("   ") ;
         outtext (ra (0).t) ;
         outtext ("   ") ;
         outtext (rb (0).t) ;
         outimage ;
         
      end
   end pros. test1arrayvalue ;


   procedure test1arrayreference (tt, rat, rbt, tv, rav, rbv, errnr) ;
      name tt, rat, rbt ;
      text array tt, tv ;
      ref (A) array rat, rav ;
      ref (B) array rbt, rbv ;
      integer errnr ;
   begin
      if     tt (0) == tv (0)
         and rat (0) == rav (0)
         and rbt (0) == rbv (0) then
      else
      begin
         err("Reference (") ;
         outint (errnr, if errnr < 10 then 1 else 2) ;
         outtext (").") ;
         outimage ;
         outtext ("            Erroneus values : ") ;
         outimage ;
         outtext ("            ") ;
         outtext (tt (0)) ;
         outtext ("   ") ;
         outtext (rat (0).t) ;
         outtext ("   ") ;
         outtext (rbt (0).t) ;
         outimage ;
         
      end ;
   end pros. test1arrayreference ;


   procedure P (bf, cf, jf, rf, tf, raf, rbf) ;
                  name       bf, cf, jf, rf, tf, raf, rbf ;
                  boolean    bf ;
                  character  cf ;
                  integer    jf ;
                  real       rf ;
                  text       tf ;
                  ref (A)    raf ;
                  ref (B)    rbf ;
   begin
                                                 ! NOW ALTER SOME VALUES       ;
      bf := false ;
      cf := 'X' ;
      jf := 99 ;
      rf := 99.0 ;
      tf := "tf" ;
      raf.t := "raf" ;
      rbf.t := "rbf" ;

      testvalue (bv, cv, iv, rv, tv, rav, rbv, false, 'X', 99, 99.0, tf,
                 raf, rbf, 1) ;

      tf :- copy ("REFCD BY tf") ;
      raf :- new A ("REFCD BY raf") ;
      rbf :- new B ("REFCD BY rbf") ;

      testreference (tv, rav, rbv, tf, raf, rbf, 2) ;

   end of procedure P ;


procedure Q (bfa1, cfa1, ifa1, rfa1, tfa1, rafa1, rbfa1) ;
                  name            bfa1, cfa1, ifa1, rfa1, tfa1, rafa1, rbfa1 ;
                  boolean   array bfa1 ;
                  character array cfa1 ;
                  integer   array ifa1 ;
                  real      array rfa1 ;
                  text      array tfa1 ;
                  ref (A)   array rafa1 ;
                  ref (B)   array rbfa1 ;
   begin
                                                 ! FIRST ALTER array CONTENTS  ;
                                                 ! ONLY                        ;
      bfa1 (0) := false ;
      cfa1 (0) := 'X' ;
      ifa1 (0) := 99 ;
      rfa1 (0) := 99.0 ;
      tfa1 (0) := "tfa" ;
      rafa1 (0).t := "rafa1 (0)" ;
      rbfa1 (0).t := "rbfa (0)" ;

      test1arrayvalue (bva1, cva1, iva1, rva1, tva1, rava1, rbva1,
                    false, 'X', 99, 99.0, tfa1 (0), rafa1 (0), rbfa1 (0), 3) ;

      tfa1 (0) :- tv ;
      rafa1 (0) :- rav ;
      rbfa1 (0) :- rbv ;

      test1arrayreference (tva1, rava1, rbva1, tfa1, rafa1, rbfa1, 4) ;

   end of procedure Q ;



   procedure P2 (bf, cf, jf, rf, tf, raf, rbf) ;
                  name       bf, cf, jf, rf, tf, raf, rbf ;
                  boolean    bf ;
                  character  cf ;
                  integer    jf ;
                  real       rf ;
                  text       tf ;
                  ref (A)    raf ;
                  ref (B)    rbf ;
   begin
                                                 ! NOW ALTER SOME VALUES       ;
      bf := false ;
      cf := 'X' ;
      jf := 99 ;
      rf := 99.0 ;
      tf := "tf" ;
      raf.t := "raf" ;
      rbf.t := "rbf" ;

      testvalue (rav.bv, rav.cv, rav.iv, rav.rv, rav.tv, rav.rav, rav.rbv,
                 false, 'X', 99, 99.0, tf, raf, rbf, 1) ;

      tf :- copy ("REFCD BY tf") ;
      raf :- new A ("REFCD BY raf") ;
      rbf :- new B ("REFCD BY rbf") ;

      testreference (rav.tv, rav.rav, rav.rbv, tf, raf, rbf, 2) ;

   end of procedure P2 ;


procedure Q2 (bfa1, cfa1, ifa1, rfa1, tfa1, rafa1, rbfa1) ;
                  name            bfa1, cfa1, ifa1, rfa1, tfa1, rafa1, rbfa1 ;
                  boolean   array bfa1 ;
                  character array cfa1 ;
                  integer   array ifa1 ;
                  real      array rfa1 ;
                  text      array tfa1 ;
                  ref (A)   array rafa1 ;
                  ref (B)   array rbfa1 ;
   begin
                                                 ! FIRST ALTER array CONTENTS  ;
                                                 ! ONLY                        ;
      bfa1 (0) := false ;
      cfa1 (0) := 'X' ;
      ifa1 (0) := 99 ;
      rfa1 (0) := 99.0 ;
      tfa1 (0) := "tfa" ;
      rafa1 (0).t := "rafa1 (0)" ;
      rbfa1 (0).t := "rbfa (0)" ;

      test1arrayvalue (rav.bva1, rav.cva1, rav.iva1, rav.rva1, rav.tva1,
                       rav.rava1, rav.rbva1, false, 'X', 99, 99.0, tfa1 (0),
                       rafa1 (0), rbfa1 (0), 3) ;

      tfa1 (0) :- tv ;
      rafa1 (0) :- rav ;
      rbfa1 (0) :- rbv ;

      test1arrayreference (rav.tva1, rav.rava1, rav.rbva1,
                           tfa1, rafa1, rbfa1, 4) ;

   end of procedure Q2 ;



class A (t) ;   value t ;   text t ;
   begin

   procedure Setvariables ;
      begin
      integer i2 ;

      bv := true ;
      cv := '*' ;
      iv := 2 ;
      rv := 3.0 ;
      tv :- copy ("tv") ;
      rav :-  new A ("rav") ;
      rbv :- new B ("rbv") ;
      bva1 (0) := false ;
      cva1 (0) := '&' ;
      iva1 (0) := 6 ;
      rva1 (0) := 7.0 ;
      tva1 (0) :- copy (" (0)") ;
      rava1 (0) :- new A ("rava1 (0)") ;
      rbva1 (0) :- new B ("rbva1 (0)") ;
      i2 := 0 ;

      while i2 <= 1 do
         begin

         if i2=0
         then
            begin
            end
         else
            begin
            end ;
         i2 := i2 + 1
         end
      end of procedure Setvariables ;

   boolean         bv ;
   character       cv ;
   integer         iv ;
   real            rv ;
   text            tv ;
   ref (A)         rav ;
   ref (B)         rbv ;
   boolean   array bva1 (0:0);
   character array cva1 (0:0);
   integer   array iva1 (0:0);
   real      array rva1 (0:0);
   text      array tva1 (0:0);
   ref (A)   array rava1 (0:0);
   ref (B)   array rbva1 (0:0);

   end of class A ;



A class B ;;



procedure Setvariables ;
   begin
   integer i2 ;

   bv := true ;
   cv := '*' ;
   iv := 2 ;
   rv := 3.0 ;
   tv :- copy ("tv") ;
   rav :-  new A ("rav") ;
   rbv :- new B ("rbv") ;
   bva1 (0) := false ;
   cva1 (0) := '&' ;
   iva1 (0) := 6 ;
   rva1 (0) := 7.0 ;
   tva1 (0) :- copy (" (0)") ;
   rava1 (0) :- new A ("rava1 (0)") ;
   rbva1 (0) :- new B ("rbva1 (0)") ;
   i2 := 0 ;

   while i2<=1 do
      begin

      if i2 = 0
      then
         begin
         end
      else
         begin
         end ;
      i2 := i2+1
      end
   end of procedure Setvariables ;


   boolean         bv ;
   character       cv ;
   integer         iv ;
   real            rv ;
   text            tv ;
   ref (A)         rav ;
   ref (B)         rbv ;
   boolean   array bva1 (0:0);
   character array cva1 (0:0);
   integer   array iva1 (0:0);
   real      array rva1 (0:0);
   text      array tva1 (0:0);
   ref (A)   array rava1 (0:0);
   ref (B)   array rbva1 (0:0);


	if verbose then begin
		outtext ("--- START Simula a.s. TEST"); outint(n,4); outimage;
		outtext (title);
		outimage; outimage;
	end;

   Setvariables ;

   P (bv, cv, iv, rv, tv, rav, rbv) ;

   Q (bva1, cva1, iva1, rva1, tva1, rava1, rbva1) ;


   rav.Setvariables ;

   P2 (rav.bv, rav.cv, rav.iv, rav.rv, rav.tv, rav.rav, rav.rbv) ;

   Q2 (rav.bva1, rav.cva1, rav.iva1, rav.rva1, rav.tva1,
       rav.rava1, rav.rbva1) ;


	if noMessage then else begin
		if not found_error then begin
			outtext ("--- NO ERRORS FOUND IN TEST"); outint(n,4); outtext("  "); outtext(title); outimage;
		end;

		if verbose then begin
			outtext ("--- END Simula a.s. TEST"); outint(n,4); outimage;
		end;
	end;

end of program;
