% ===============================================   Main   program =============
%  PROGRAM NAME:   SIMULA TEST NO 109
%
%  PURPOSE: Simple Co-Routine Sample 2: detach - resume
%
%  WRITTEN BY:  MYH   28/04-2019
% ==============================================================================

begin
	integer nnn=109; text title="--- Simple Co-Routine Sample 2: detach - resume";
	
	boolean found_error;
	integer nFailed;
	boolean verbose=false;
	boolean noMessage;

	procedure err(t); text t;
	begin sysout.setpos(1);
	      outtext("*** error: in test "); outtext(t); outimage;
	      found_error:=true; nFailed:=nFailed+1;
	end;


   integer traceCase;
   text array facit(0:6);
   ref(A) x;
   
   text procedure edint(i); integer i;
   begin text t; t:-blanks(6); t.putint(i); edint:-t; end;
   
   procedure trace(msg); text msg;
   begin
      if verbose then begin outtext(msg); outimage; end;
      if msg <> facit(traceCase) then
      begin
         err("Case " & edint(traceCase));
         outtext("Trace: " & msg); outimage;
         outtext("Facit: " & facit(traceCase)); outimage;
      end;
      traceCase:=traceCase+1;
   end;
   
   class A;
   begin
      integer i;
      trace("A: State 1(Initiating)");
      detach;     
      trace("A: State 2");
      detach;
      trace("A: State 3(Terminating)");
   end A;
   

	if verbose then begin
		outtext ("--- START Simula a.s. TEST"); outint(nnn,4); outimage;
		outtext (title);
		outimage; outimage;
	end;
   
   facit(0):-"Main: Before new A";
   facit(1):-"A: State 1(Initiating)";
   facit(2):-"Main: Before first resume";
   facit(3):-"A: State 2";
   facit(4):-"Main: Before second resume";
   facit(5):-"A: State 3(Terminating)";
   facit(6):-"Main: Before third resume";
   
   begin
      trace("Main: Before new A");
      x:-new A;
      trace("Main: Before first resume");
      resume(x);
      trace("Main: Before second resume");
      resume(x);
      trace("Main: Before third resume");
      !resume(x); !Will cause ERROR: Resume(x): x is not in detached state.
   end subBlock;
   
   
end;

	if noMessage then else begin
		if not found_error then begin
			outtext ("--- NO ERRORS FOUND IN TEST"); outint(nnn,4); outtext("  "); outtext(title); outimage;
		end;

		if verbose then begin
			outtext ("--- END Simula a.s. TEST"); outint(nnn,4); outimage;
		end;
	end;

end of program;
   