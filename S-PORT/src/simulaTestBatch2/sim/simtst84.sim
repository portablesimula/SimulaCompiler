
% ====================================   Main   program  ===========
%  PROGRAM NAME:  Simula a.s. - SIMULA TEST NO 84
%
%  PURPOSE: Test PrintFile.(PW 24)
%
%  METHOD:
%
%  WRITTEN BY:
% ====================================================================

begin
	integer nnn=84; text title="--- Test PrintFile";
	
	boolean found_error;
	integer nFailed;
	boolean verbose=false;
	boolean noMessage;

	procedure err(t); text t;
	begin sysout.setpos(1);
	      outtext("*** error: in test "); outtext(t); outimage;
	      found_error:=true; nFailed:=nFailed+1;
	end;


text print84="C:/GitHub/SimulaCompiler/Simula/src/simulaTestBatch/files/print84";

ref(PrintFile)   myfile;
boolean           save;

procedure Check(b1, b2);   boolean b1, b2; begin
   if b1 eqv b2 then else err("error");
end of procedure Check;

if verbose then
begin outtext("--- START Simula a.s. TEST 84(test PrintFile)"); outimage;
      outtext("    The program prints on ""new PrintFile(print84)"",");
      outimage;
      outtext("    compare that output to program source after exec.");
      outimage;
      outtext("    In addition, ""OK"" is printed 5 times on sysout.");
      outimage; outimage;
end;

myfile:-new PrintFile(print84);
save:= myfile.line=0;
Check(save, true);
myfile.open(blanks(132));
Check(myfile.line=1, true);

inspect myfile do
   begin
   linesperpage(4);
   outtext("linesperpage:=4    line 1."); outimage;
   outtext("      line 2."); outimage;
   outtext("      line 3."); outimage;
   outtext("      line 4."); outimage;
   outtext("      line 5."); outimage;
   spacing(0);
   outtext("spacing:=0  line 1");   outimage;
   outtext("            line  2");  outimage;
   outtext("            line   3"); outimage;
   spacing(1);
   eject(3);
   outtext("eject(3)"); outimage;
   eject(2);
   outtext("eject(2)"); outimage;
   linesperpage(60);
   spacing(2);
   outtext("linesperpage:=60,  spacing:=2"); outimage;
   eject(80);
   outtext("eject(80),  EQUIV TO eject(1)"); outimage;
   Check(pos=1, true);
   Check(image=blanks(132), true);
   Check(length=132, true);
                                       ! CHECK OUTFILE ATTRIBUTES   ;
   outint(123, 3);
   outfix(456.7, 1, 6);
   outreal(8.9&-02, 2, 9);
   outfrac(1234.5, 1, 9);
   outtext("text ");
   outimage;
                                       ! FORCE outimage AFTER OUTPUT;
                                       ! OF ITEM                    ;
   setpos(130);
   outint(123, 3);
   outchar('*');
   setpos(127);
   outfix(456.7, 1, 6);
   outchar('*');
   setpos(124);
   outreal(8.9&-02, 2, 9);
   outchar('*');
   setpos(124);
   outfrac(1234.5, 1, 9);
   outchar('*');
   setpos(129);
   outtext("text");
   outchar('*');
                                       ! FORCE OUTPUT BEFORE OUTPUT ;
                                       ! OF ITEM                    ;
   setpos(131);
   outint(123, 3);
   setpos(129);
   outfix(456.7, 1, 6);
   setpos(127);
   outreal(8.9&-02, 2, 9);
   setpos(127);
   outfrac(1234.5, 1, 9);
   setpos(130);
   outtext("text");
   setpos(132);
   outchar('X');
   outchar('Y');
   setpos(199);
   outchar('Z');
   setpos(120);
   outchar('A');
   setpos(81);
   outchar('B');
   outimage;
   outtext("LAST line OF OUTPUT.");
   close;
   end;


	if noMessage then else begin
		if not found_error then begin
			outtext ("--- NO ERRORS FOUND IN TEST"); outint(nnn,4); outtext("  "); outtext(title); outimage;
		end;

		if verbose then begin
			outtext ("--- END Simula a.s. TEST"); outint(nnn,4); outimage;
		end;
	end;

end of program;

