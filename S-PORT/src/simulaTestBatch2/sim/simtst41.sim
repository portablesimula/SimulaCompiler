
% ===============================================   Main   program =============
%  PROGRAM NAME:   Simula a.s. - SIMULA TEST NO 41
%
%  PURPOSE:     Test use of name parameter in external procedure.
%
%  EXTERNAL PROCEDURE:  p41 - has to be compiled first.
%
%  WRITTEN BY:  BEH   23/07-86
% ==============================================================================

begin
%   external procedure p41 ;
    external integer procedure p41="C:/GitHub/SimulaCompiler/Simula/src/sport/rts/temp/simtst41proc.sim.atr";
   
	integer nnn=41; text title="--- Test labels and switches as parameters to procedures";
	
	boolean found_error;
	integer nFailed;
	boolean verbose=false;
	boolean noMessage;
   
   text procedure edint(i); integer i;
   begin text t; t:-blanks(6); t.putint(i); edint:-t; end;

	procedure err(t); text t;
	begin sysout.setpos(1);
	      outtext("*** error: in test "); outtext(t); outimage;
	      found_error:=true; nFailed:=nFailed+1;
	end;

   integer i ;
   integer array A(0:100) ;

   integer procedure teller ;
      teller := i := i+1 ;

   procedure P(j) ;
      name j ;
      integer j ;
   begin
      while i < 100 do
         p41(A, j) ;
   end ;

	if verbose then begin
		outtext ("--- START Simula a.s. TEST"); outint(nnn,4); outimage;
		outtext (title);
		outimage; outimage;
	end;

   P(teller) ;

   ! Check that : A(0) = 0, A(1) = 2, A(2) = 0, A(3) = 4, ....;

% -- for i := 0, i+1 while not found_error and i <= 100 do
   for i := 0 step 1 until 99 do
   if mod(i,2) <> 0 and A(i) <> i+1 or mod(i,2) = 0 and A(i) <> 0 then
   begin
      err("Values:") ;
      outtext("  i = ");  outint(i, 4);
      outtext("  A(i) = "); outint(A(i), 4) ;
      outimage ;
   end ;


	if noMessage then else begin
		if not found_error then begin
			outtext ("--- NO ERRORS FOUND IN TEST"); outint(nnn,4); outtext("  "); outtext(title); outimage;
		end;

		if verbose then begin
			outtext ("--- END Simula a.s. TEST"); outint(nnn,4); outimage;
		end;
	end;

end of program;
