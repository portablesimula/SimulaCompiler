
% =======================================   Main   program =============
%  PROGRAM NAME:   Simula a.s. - SIMULA TEST NO 64
%
%  PURPOSE:     Test parameter transmission by value to classes.
%
%  WRITTEN BY:  BEH   06/08-86
% ======================================================================

begin
	integer nnn=64; text title="--- Test parameter transmission by value to classes.";
	
	boolean found_error;
	integer nFailed;
	boolean verbose=false;
	boolean noMessage;

	procedure err(t); text t;
	begin sysout.setpos(1);
	      outtext("*** error: in test "); outtext(t); outimage;
	      found_error:=true; nFailed:=nFailed+1;
	end;

   text array lines, facit(1:20);
   integer lnr;

   procedure SaveLine;
   begin
      lnr := lnr + 1;
      lines(lnr) :- copy(sysout.image.strip);
      sysout.image.setpos(1);
      sysout.image := notext
   end;

   procedure CheckLines(n, enr);
      integer n, enr;
   begin
      boolean OK;
      integer i;

      OK := true;

      for i := 1 step 1 until n do
      if facit(i) <> lines(i) then OK := false;

      if not OK then
      begin
         err("Failed");
         outtext("value of attributes(");
         outint(enr, if enr < 10 then 1 else 2);
         outtext(").");
         outimage;
         outtext("            Erroneus values : ");
         outimage;
         for i := 1 step 1 until n do
         begin
            outtext("            ");
            outchar('"');
            outtext(lines(i));
            outchar('"');
            outimage;
         end;
         outimage;
      end;
   end pros. CheckLines;

   procedure ClearLines;
   begin
      integer i;

      for i := 1 step 1 until 20 do
         facit(i) :- lines(i) :- notext;

      lnr := 0;
   end  pros. ClearLines;


   class A1(b);  boolean b;
   begin
      character     c;
      integer       i;
      real          r;
      text          t;

      outtext("  A1 before Inner");
      SaveLine;
      b := true;
      i := 2;
      r := 3;
      c := '*';
      t :- copy("t in A1");

      if b then outtext("  true  ") else outtext("  false ");
      outchar(c);
      outint(i, 4);
      outreal(r, 5, 12);
      outchar(' ');
      outtext(t);
      SaveLine;

      inner;

      outtext("  A1 after  Inner");
      SaveLine;
   end of class A1;

   A1 class A12(c, i, r, t);  value         t;
                                character     c;
                                integer       i;
                                real          r;
                                text          t;
   begin
      boolean b;
      outtext("  enter A12");
      SaveLine;

      if b then outtext("  true  ") else outtext("  false ");
      outchar(c);
      outint(i, 4);
      outreal(r, 5, 12);
      outchar(' ');
      outtext(t);
      SaveLine;

      outtext("  exit A12");
      SaveLine;
   end of class A12;

   A1 class A13(bv, cv , iv, rv);  value           bv, cv , iv, rv;
                                     boolean   array bv;
                                     character array cv;
                                     integer   array iv;
                                     real      array rv;
   begin
      integer    i;

      while  i <= 2  do
      begin
         if bv(i) then outtext("  true  ") else outtext("  false ");
         outchar(cv(i));
         outint(iv(i), 4);
         outreal(rv(i), 5, 12);
         SaveLine;

         i := i + 1
      end;

   end of class A13;

   class A14(bv, cv , iv, rv);   value           bv, cv , iv, rv;
                                   boolean   array bv;
                                   character array cv;
                                   integer   array iv;
                                   real      array rv;
   begin
      integer    i, j;

      while  i <= 2  do
      begin
         j := 0;

         while  j <= 3  do
         begin
            if bv(i,j) then outtext("  true  ")
            else outtext("  false ");
            outchar(cv(i, j));
            outint(iv(i, j), 4);
            outreal(rv(i, j), 5, 12);
            SaveLine;

            j := j + 1
         end;

         i := i + 1;
      end

   end of class A14;

   boolean         bv;
   character       cv;
   integer         iv, s1, s2, sum;
   real            rv;
   text            tv, txt;

   boolean   array bav1(0:2), bav2(0:2, 0:3);
   character array cav1(0:2), cav2(0:2, 0:3);
   integer   array iav1(0:2), iav2(0:2, 0:3);
   real      array rav1(0:2), rav2(0:2, 0:3);
   text      array tav1(0:2), tav2(0:2, 0:3);

   ref(A1)  ra1;
   ref(A12) ra12;
   ref(A13) ra13;
   ref(A14) ra14;


	if verbose then begin
		outtext ("--- START Simula a.s. TEST"); outint(nnn,4); outimage;
		outtext (title);
		outimage; outimage;
	end;


   ra1 :- new A1(false);

   facit(1) :- "  A1 before Inner";
   facit(2) :- "  true  *   2  3.0000&+00 t in A1";
   facit(3) :- "  A1 after  Inner";

   CheckLines(3, 1);

   if ra1.b then outtext("  true  ") else outtext("  false  ");
   outchar(ra1.c);
   outint(ra1.i, 4);
   outreal(ra1.r, 5, 12);
   outchar(' ');
   outtext(ra1.t);
   SaveLine;

   facit(4) :- facit(2);

   CheckLines(4, 2);

   ClearLines;

   ra12 :- new A12(false, '+', 35.555, 12, "stringparm");

   facit(1) :- "  A1 before Inner";
   facit(2) :- "  true  *   2  3.0000&+00 t in A1";
   facit(3) :- "  enter A12";
   facit(4) :- "  false +  36  1.2000&+01 stringparm";
   facit(5) :- "  exit A12";
   facit(6) :- "  A1 after  Inner";

   CheckLines(6, 3);

   ClearLines;

   bv := true;
   cv  := '=';
   iv := 2;
   rv := 22;
   tv :- copy("OK");

   ra12 :- new A12(bv, cv, iv, rv, tv);

   facit(1) :- "  A1 before Inner";
   facit(2) :- "  true  *   2  3.0000&+00 t in A1";
   facit(3) :- "  enter A12";
   facit(4) :- "  false =   2  2.2000&+01 OK";
   facit(5) :- "  exit A12";
   facit(6) :- "  A1 after  Inner";

   CheckLines(6, 4);

   if ra12.b then outtext("  true  ") else outtext("  false ");
   outchar(ra12.c);
   outint(ra12.i, 4);
   outreal(ra12.r, 5, 12);
   outchar(' ');
   outtext(ra12.t);
   SaveLine;

   facit(7) :- facit(4);

   CheckLines(7, 5);

   ClearLines;

   ra12 :- new A12(iv + 2.222 <> rv**iv,
                 if ra1.b then ra12.c else ('N'),
                 -(ra12.i +(1 +(ra12.r -(1 -(ra12.r - ra12.i))))),
                (ra1.i*(ra1.r*(ra1.r + 1.0))),
                 if ra1.b eqv ra12.b then ra1.t else tv);

   facit(1) :- "  A1 before Inner";
   facit(2) :- "  true  *   2  3.0000&+00 t in A1";
   facit(3) :- "  enter A12";
   facit(4) :- "  false = -44  2.4000&+01 OK";
   facit(5) :- "  exit A12";
   facit(6) :- "  A1 after  Inner";

   CheckLines(6, 6);

   ClearLines;

   while  s1 <= 2  do
   begin
      bav1(s1) :=(s1//2)*2=s1;
      cav1(s1) := '1';
      iav1(s1) := s1;
      rav1(s1) := s1;
      txt :- copy("( )");
      txt.sub(1, 1).putint(s1);
      tav1(s1) :- txt;
      s2 := 0;

      while  s2 <= 3  do
      begin
         sum := s1 + s2;
         bav2(s1, s2) :=(sum//2)*2 = sum;
         cav2(s1, s2) := '2';
         iav2(s1, s2) := sum;
         rav2(s1, s2) := sum;
         txt :- copy("( ,  )");
         txt.sub(1, 1).putint(s1);
         txt.sub(3, 1).putint(s2);
         tav2(s1, s2) :- txt;
         s2 := s2 + 1
      end;

      s1 := s1 + 1
   end;

   ra13 :- new A13(false, bav1, cav1, iav1, rav1);

   facit(1) :- "  A1 before Inner";
   facit(2) :- "  true  *   2  3.0000&+00 t in A1";
   facit(3) :- "  true  1   0  0.0000&+00";
   facit(4) :- "  false 1   1  1.0000&+00";
   facit(5) :- "  true  1   2  2.0000&+00";
   facit(6) :- "  A1 after  Inner";

   CheckLines(6, 7);

   if ra13.bv(0) then outtext("  true  ") else outtext("  false ");
   outchar(ra13.cv(2));
   outint(ra13.iv(ra13.iv(0)*ra13.rv(ra13.iv(2))), 4);
   outreal(ra13.rv(1), 5, 12);
   SaveLine;

   facit(7) :- "  true  1   0  1.0000&+00";

   CheckLines(7, 8);

   ClearLines;

   ra14 :- new A14(bav2, cav2, iav2, rav2);

   facit(1)  :- "  true  2   0  0.0000&+00";
   facit(2)  :- "  false 2   1  1.0000&+00";
   facit(3)  :- "  true  2   2  2.0000&+00";
   facit(4)  :- "  false 2   3  3.0000&+00";
   facit(5)  :- "  false 2   1  1.0000&+00";
   facit(6)  :- "  true  2   2  2.0000&+00";
   facit(7)  :- "  false 2   3  3.0000&+00";
   facit(8)  :- "  true  2   4  4.0000&+00";
   facit(9)  :- "  true  2   2  2.0000&+00";
   facit(10) :- "  false 2   3  3.0000&+00";
   facit(11) :- "  true  2   4  4.0000&+00";
   facit(12) :- "  false 2   5  5.0000&+00";

   CheckLines(12, 9);

   if ra14.bv(0, 2)  then outtext("  true  ")
   else outtext("  false ");
   outchar(ra14.cv(ra14.rv(ra14.iv(0, 2), 0), ra14.iv(2, 0)));
   outint((if ra14.bv(ra14.iv(0, ra14.iv(0, 1)), 0)
        then
           ra14.iv(2, 2)
        else
           ra14.rv(0, 3)), 4);

   outint(ra14.iv(ra14.iv(0,1)+(ra14.iv(0,1)-(ra14.iv(1,0)-
          (ra14.iv(1,0)))),3),4);
   outreal(ra14.iv(1,3),ra14.iv(2,3),ra14.rv(2,3) +
            ra14.iv(2,3) + ra14.rv(2,0));
   outreal(ra14.rv(if ra14.bv(0,3) then 0.0 else 1.0,2)**ra14.iv(1,1),
            5,12);
   SaveLine;

   facit(13) :- "  true  2   3   5  4.0000&+00 9.0000&+000";

   CheckLines(13, 10);


	if noMessage then else begin
		if not found_error then begin
			outtext ("--- NO ERRORS FOUND IN TEST"); outint(nnn,4); outtext("  "); outtext(title); outimage;
		end;

		if verbose then begin
			outtext ("--- END Simula a.s. TEST"); outint(nnn,4); outimage;
		end;
	end;

end of program;
