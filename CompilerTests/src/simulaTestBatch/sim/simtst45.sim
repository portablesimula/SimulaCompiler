
% ===============================================   Main   program =============
%  PROGRAM NAME:   Simula a.s. - SIMULA TEST NO 45
%
%  PURPOSE:     Test object relations - is and in.
%
%  WRITTEN BY:  BEH   28/07-86
% ==============================================================================
external class SimulaTest;

SimulaTest(45,"--- Test object relations - is and in.") begin

   class A;;
   A class B;;
   A class C;;
   B class D;;
   C class E;;

   ref(A) ra;
   ref(B) rb;
   ref(C) rc;
   ref(D) rd;
   ref(E) re;

   procedure check(a, b, enr);  boolean a, b;  integer enr;
   if  a eqv b  then else begin
      err("Object relation");
      outtext("   case(");
      outint(enr, if enr < 10 then 1 else 2 );
      outtext(").");
      outimage;
      outtext("            Erroneus valus : ");
      outimage;
      outtext("                 a = ");
      outtext(if a then "true" else "false");
      outimage;
      outtext("                 b = ");
      outtext(if b then "true" else "false" );
      outimage;
   end;

   ra :- new A;
   rb :- new B;
   rc :- new C;
   rd :- new D;
   re :- new E;


   check(ra is A, true, 1);
   check(rb is B, true, 2);
   check(rc is C, true, 3);
   check(rd is D, true, 4);
   check(re is E, true, 5);
   check(ra is B, false, 6);
   check(ra is C, false, 7);
   check(ra is D, false, 8);
   check(ra is E, false, 9);
   check(rb is A, false, 10);
   check(rb is C, false, 11);
   check(rb is D, false, 12);
   check(rb is E, false, 13);
   check(rc is A, false, 14);
   check(rc is B, false, 15);
   check(rc is D, false, 16);
   check(rc is E, false, 17);
   check(rd is A, false, 18);
   check(rd is B, false, 19);
   check(rd is C, false, 20);
   check(rd is E, false, 21);
   check(re is A, false, 22);
   check(re is B, false, 23);
   check(re is C, false, 24);
   check(re is D, false, 25);

   check(rb qua A is B, true, 26);
   check(rc qua A is C, true, 27);
   check(rd qua A is D, true, 28);
   check(re qua A is E, true, 29);

   ra :- new B;
   check(ra qua A is B, true, 30);

   rc :- new E;
   check(rc qua A is E, true, 31);

   ra :- new A; rc :- new C;
   check(ra in A, true, 32);
   check(rb in B, true, 33);
   check(rc in C, true, 34);
   check(rd in D, true, 35);
   check(re in E, true, 36);
   check(ra in B, false, 37);
   check(ra in C, false, 38);
   check(ra in D, false, 39);
   check(ra in E, false, 40);
   check(rb in D, false, 41);
   check(rc in E, false, 42);
   check(rb in A, true, 43);
   check(rc in A, true, 44);
   check(rd in A, true, 45);
   check(rd in B, true, 46);
   check(re in A, true, 47);
   check(re in C, true, 48);
   check(re in D, false, 49);
   check(rd in E, false, 50);
   check(rb in E, false, 51);
   check(re in B, false, 52);

   check(rb qua A in B, true, 53);
   check(rc qua A in C, true, 54);
   check(rd qua A in D, true, 55);
   check(re qua A in E, true, 56);
   check(rd qua B in D, true, 57);
   check(re qua C in E, true, 58);

   ra :- rb :- none;
   check(ra in A, false, 59);
   check(ra is A, false, 60);
   check(rb in A, false, 61);
   check(rb is A, false, 62);
   check(rb in B, false, 63);

   
 end;
