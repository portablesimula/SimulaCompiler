
% =====================================   Main   program =============
%  PROGRAM NAME:   Simula a.s. - SIMULA TEST NO 81
%
%  PURPOSE:        Test the value of close.
%
%  NOTE:           Uses several files as noted 
%
%  WRITTEN BY:  BEH   28/08-86
% ====================================================================
external class SimulaTest;

SimulaTest(81,"--- Test the value of close.") begin

   ref(file) xf;
   
   text anyIntypeFile="C:/GitHub/SimulaCompiler/Simula/src/simulaTestBatch/files/anyIntypeFile81";
   text anyouttypeFile="C:/GitHub/SimulaCompiler/Simula/src/simulaTestBatch/files/anyouttypeFile81";
   text anyDirectFile="C:/GitHub/SimulaCompiler/Simula/src/simulaTestBatch/files/anyDirectFile81";
   text anyDirectByteFile="C:/GitHub/SimulaCompiler/Simula/src/simulaTestBatch/files/anyDirectByteFile81";

   procedure report(line,t,abort); integer line; text t; boolean abort;
   begin err("Failed");
         outimage; outtext("Line "); outint(line,0); outtext(": *** report: "); outtext(t); outimage;
         if abort then error("Abort requested");
   end;

   xf:- new infile(anyIntypeFile);

   if xf qua infile.close
   then report(sourceline,"'close' returns true "
              "(never-opened infile ""anyIntypeFile"")",false);

   if not xf qua infile.open(blanks(80))
   then report(sourceline,"'open' returns false "
              "(never-opened infile ""anyIntypeFile"")",true);

   if xf qua infile.open(blanks(80))
   then report(sourceline,"'open' returns true "
              "(on open infile ""anyIntypeFile"")",false);

   if not xf qua infile.close
   then report(sourceline,"'close' returns false "
              "(open infile ""anyIntypeFile"")",false)
   else
   if xf qua infile.close
   then report(sourceline,"'close' returns true "
              "(closed infile ""anyIntypeFile"")",false);


   xf:- new outfile(anyouttypeFile);

   if xf qua outfile.close
   then report(sourceline,"'close' returns true "
              "(never-opened outfile " & anyouttypeFile &")",false);

   if not xf qua outfile.open(blanks(80))
   then report(sourceline,"'open' returns false "
              "(never-opened outfile " & anyouttypeFile &")",true);

   if xf qua outfile.open(blanks(80))
   then report(sourceline,"'open' returns true "
              "(open outfile " & anyouttypeFile &")",false);

   if not xf qua outfile.close
   then report(sourceline,"'close' returns false "
              "(open outfile " & anyouttypeFile &")",false)
   else
   if xf qua outfile.close
   then report(sourceline,"'close' returns true "
              "(closed outfile " & anyouttypeFile &")",false);


   xf:- new directfile(anyDirectFile);
   xf.setaccess("CREATE");

   if xf qua directfile.close
   then report(sourceline,"'close' returns true "
              "(never-opened directfile " & anyDirectFile & ")",false);

   if not xf qua directfile.open(blanks(80))
   then report(sourceline,"'open' returns false "
              "(never-opened directfile " & anyDirectFile & ")",true);

   if xf qua directfile.open(blanks(80))
   then report(sourceline,"'open' returns true "
              "(open directfile " & anyDirectFile & ")",false);

   if not xf qua directfile.close
   then report(sourceline,"'close' returns false "
              "(open directfile " & anyDirectFile & ")",false)
   else
   if xf qua directfile.close
   then report(sourceline,"'close' returns true "
              "(closed directfile " & anyDirectFile & ")",false);


   xf:- new inbytefile(anyIntypeFile);

   if xf qua inbytefile.close
   then report(sourceline,"'close' returns true "
              "(never-opened inbytefile ""anyIntypeFile"")",false);

   if not xf qua inbytefile.open
   then report(sourceline,"'open' returns false "
              "(never-opened inbytefile ""anyIntypeFile"")",true);

   if xf qua inbytefile.open
   then report(sourceline,"'open' returns true "
              "(on open inbytefile ""anyIntypeFile"")",false);

   if not xf qua inbytefile.close
   then report(sourceline,"'close' returns false "
              "(open inbytefile ""anyIntypeFile"")",false)
   else
   if xf qua inbytefile.close
   then report(sourceline,"'close' returns true "
              "(closed inbytefile ""anyIntypeFile"")",false);


   xf:- new outbytefile(anyouttypeFile);

   if xf qua outbytefile.close
   then report(sourceline,"'close' returns true "
              "(never-opened outbytefile " & anyouttypeFile &")",false);

   if not xf qua outbytefile.open
   then report(sourceline,"'open' returns false "
              "(never-opened outbytefile " & anyouttypeFile &")",true);

   if xf qua outbytefile.open
   then report(sourceline,"'open' returns true "
              "(on open outbytefile " & anyouttypeFile &")",false);

   if not xf qua outbytefile.close
   then report(sourceline,"'close' returns false "
              "(open outbytefile " & anyouttypeFile &")",false)
   else
   if xf qua outbytefile.close
   then report(sourceline,"'close' returns true "
              "(closed outbytefile " & anyouttypeFile &")",false);


   xf:- new directbytefile(anyDirectByteFile);
   xf.setaccess("CREATE");

   if xf qua directbytefile.close
   then report(sourceline,"'close' returns true "
              "(never-opened directbytefile " & anyDirectByteFile & ")",false);

   if not xf qua directbytefile.open
   then report(sourceline,"'open' returns false "
              "(never-opened directbytefile " & anyDirectByteFile & ")",true);

   if xf qua directbytefile.open
   then report(sourceline,"'open' returns true "
              "(on open directbytefile " & anyDirectByteFile & ")",false);

   if not xf qua directbytefile.close
   then report(sourceline,"'close' returns false "
              "(open directbytefile " & anyDirectByteFile & ")",false)
   else
   if xf qua directbytefile.close
   then report(sourceline,"'close' returns true "
              "(closed directbytefile " & anyDirectByteFile & ")",false);


   xf:- new printfile(anyouttypeFile);

   if xf qua printfile.close
   then report(sourceline,"'close' returns true "
              "(never-opened printfile " & anyouttypeFile &")",false);

   if not xf qua printfile.open(blanks(80))
   then report(sourceline,"'open' returns false "
              "(never-opened printfile " & anyouttypeFile &")",true);

   if xf qua printfile.open(blanks(80))
   then report(sourceline,"'open' returns true "
              "(on open printfile " & anyouttypeFile &")",false);

   if not xf qua printfile.close
   then report(sourceline,"'close' returns false "
              "(open printfile " & anyouttypeFile &")",false)
   else
   if xf qua printfile.close
   then report(sourceline,"'close' returns true "
              "(closed printfile " & anyouttypeFile &")",false);

% TERMINATE:

end;