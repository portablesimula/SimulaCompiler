
% =================================   Main   program  ===========
%  PROGRAM NAME:  Simula a.s. - SIMULA TEST NO 85
%
%  PURPOSE: Test Directfile. First set up a DirectFile with five records
%           each of 12 characters, in edited format.
%
%  METHOD:
%
%  WRITTEN BY:
% ==========================================================
external class SimulaTest;

SimulaTest(85,"--- Test Directfile.") begin

% if verbose then begin

inspect new DirectFile("direct85") do begin

   integer  i, j; real tmp;

   procedure check(txt,title,lngth); text txt, title; integer lngth;
   begin
      if sysout.image.sub(1,lngth) <> txt then
      begin
         sysout.outtext(" <-- was result"); sysout.outimage;
         sysout.outtext(txt);
         sysout.outtext(" <-- was expected"); sysout.outimage;
         sysout.outtext("*** Error in test of: ");
         sysout.outtext(title); sysout.outimage; sysout.outimage;
         err("Failed");
      end;
      sysout.image := notext; sysout.image.setpos(1);
             image := notext;        image.setpos(1);
   end of procedure check;

   setaccess("CHARSET:UTF-8");
   setaccess("CREATE");
   open(blanks(12));

   sysout.outint(image.length,3);
   sysout.outint(image.pos,3);
   sysout.outint(location,3);

   check(" 12  1  1","image.length, image.pos and location after open",9);

   for i := 1 step 1 until 5 do
   begin
      locate(6 - i);
      setpos(9);
      outint(i, 4);
      outimage
   end;

   locate(2);
   sysout.outint(location,3);
   inimage;
   sysout.outint(inint,3);
   locate(5);
   sysout.outint(location,3);
   inimage;
   sysout.outint(inint,3);
   locate(3);
   sysout.outint(location,3);
   inimage;
   sysout.outint(inint,3);

   check("  2  4  5  1  3  3","locate, location and inint",18);

                                       ! SCAN FILE SEQUENTIALLY     ;
   locate(1);
   setpos(13);
   i := 1;
   while i <= 5 do
   begin
      sysout.outint(inint, 5);
      i := i + 1
   end;

   check("    5    4    3    2    1",
         "Sequential inint without inimage",25);

   locate(1);
   inimage;
   while  not lastitem  do sysout.outreal(inreal, 1, 7);

   check(" 5&+000 4&+000 3&+000 2&+000 1&+000", "inreal and lastitem",35);

   locate(1);
   inimage;
   while  not lastitem  do sysout.outint(infrac, 10);

   check("         5         4         3         2         1",
         "infrac and lastitem",50);

   locate(1);
   inimage;
   while  not lastitem  do sysout.outchar(inchar);

   check("54321", "inchar and lastitem",5);

   locate(1);
   inimage;
   while not endfile do
   begin
      sysout.outtext(intext(12));
      inimage;
   end;

   check("           5           4           3           2           1",
         "intext and endfile",60);

   begin
      text array t(1:5);
      t(1)  :- "1A1B1C1D1E1F";
      t(2)  :- "2A2B2C2D2E2F";
      t(3)  :- "3A3B3C3D3E3F";
      t(4)  :- "4A4B4C4D4E4F";
      t(5)  :- "5A5B5C5D5E5F";

      locate(1);
      for i := 1 step 1 until 5 do
      begin
         image := t(i);
         outimage;
      end;

      locate(1);
      inimage;
      sysout.outtext(intext(60));

      check("1A1B1C1D1E1F2A2B2C2D2E2F3A3B3C3D3E3F4A4B4C4D4E4F5A5B5C5D5E5F",
            "outimage and intext",60);
   end;

   locate(1);
   image.setpos(1);
   while  location <= 5  do  outint(location, 3);

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check("  1  1  1  1  1  2  2  2  2  3  3  3  3  4  4  4  4  5  5  5",
         "outint and location",60);

   locate(1);
   image.setpos(1);
%   while location <= 5 do outreal(location, 1, 7);
   while location <= 5 do begin tmp:=location; outreal(tmp, 1, 6); end;

   locate(1);
   inimage;
   sysout.outtext(intext(70));

   check(" 1&+00 1&+00 1&+00 2&+00 2&+00 3&+00 3&+00 4&+00 4&+00 5&+00",
         "outreal",60);

   locate(1);
   image.setpos(1);
   while location <= 5 do outfix(location, 3, 6);

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check(" 1.000 1.000 1.000 2.000 2.000 3.000 3.000 4.000 4.000 5.000",
         "outfix",60);

   locate(1);
   image.setpos(1);
   while location <= 5 do outfrac(location, 4, 12);

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check("      .000 1      .000 1      .000 2      .000 3      .000 4",
         "outfrac",60);

   locate(1);
   while location <= 5 do
   begin
      setpos(location);
      outchar('+');
      outimage;
   end;

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check("+            +            +            +            +       ",
         "outchar",60);

   locate(1);
   while location <= 4 do
   begin
      setpos(9);
      outint(location,5);
   end;
   outimage;

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check("                1           2           3           4       ",
         "outint with forced outimage",60);

   locate(1);
   while location <= 4 do
   begin
      setpos(8);
      outreal(location, 1, 6);
   end;
   outimage;

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check("             1&+00       2&+00       3&+00       4&+00      ",
         "outreal with forced outimage",60);

   locate(1);
   while location <= 4 do
   begin
      setpos(8);
      outfix(location, 3, 6);
   end;
   outimage;

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check("             1.000       2.000       3.000       4.000      ",
         "outfix with forced outimage",60);

   locate(1);
   while location <= 4 do
   begin
      setpos(6);
      outfrac(location, 4, 8);
   end;
   outimage;

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check("              .000 1      .000 2      .000 3      .000 4    ",
         "outfrac with forced outimage",60);

   locate(1);
   while location <= 4 do
   begin
      setpos(13);
      outchar('+');
   end;
   outimage;

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check("            +           +           +           +           ",
         "outchar with forced outimage",60);

   locate(1);
   while location <= 4 do
   begin
      setpos(10);
      outtext("THIS")
   end;
   outimage;

   locate(1);
   inimage;
   sysout.outtext(intext(60));

   check("            THIS        THIS        THIS        THIS        ",
         "outtext with forced outimage",60);

   setaccess("PURGE");
   close;

   if image == notext  then sysout.outtext("true")
                       else sysout.outtext("FALSE");

   check("true","image after close",4);


end of inspect DirectFile;


end of program;
