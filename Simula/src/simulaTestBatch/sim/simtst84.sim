
% ====================================   Main   program  ===========
%  PROGRAM NAME:  Simula a.s. - SIMULA TEST NO 84
%
%  PURPOSE: Test DirectBytefile
%
%  METHOD:
%
%  WRITTEN BY: MYH
% ====================================================================
external class SimulaTest;

SimulaTest(84,"--- Test DirectBytefile") begin

   integer traceCase;
   text array facit(0:26);
   
   procedure trace(msg); text msg;
   begin
      if verbose then begin outtext(msg); outimage; end;
      if msg <> facit(traceCase) then
      begin err("Case " & edit(traceCase));
         outtext("Trace: " & msg); outimage;
         outtext("Facit: " & facit(traceCase)); outimage;
      end;
      traceCase:=traceCase+1;
   end;
   
   procedure test1; begin
		inspect new DirectByteFile("TEMP084") do begin
			integer i;
			trace("Test1: Before open endfil=" & edit(endfile));
			trace("Test1: Before open location=" & edit(location));
			trace("Test1: Before open maxloc=" & edit(maxloc));
			setaccess("CREATE");
			open; 
			trace("Test1: After open endfil=" & edit(endfile));
			trace("Test1: After open location=" & edit(location));
			trace("Test1: After open maxloc=" & edit(maxloc));
			trace("Test1: After open lastloc=" & edit(lastloc));
			for i:=1 step 1 until 5 do begin
				outbyte(i);
			end;
			for i:=2,3,1,5,4 do begin
				locate(i); trace("Test1: At loc " & edit(i) & ": " & edit(inbyte));
			end;
			locate(4);
			trace("Test1: After locate(4) endfil=" & edit(endfile));
			trace("Test1: After locate(4) location=" & edit(location));
			trace("Test1: After locate(4) lastloc=" & edit(lastloc));
			locate(6);
			trace("Test1: After locate(6) endfil=" & edit(endfile));
			setaccess("PURGE");
			close; 
		end; 	
   end;
   
   procedure test2; begin
		inspect new DirectByteFile("TEMP084") do begin
			integer i,j;
			text t;
			setaccess("CREATE");
			open; 
			for i:=1 step 1 until 5 do begin
				outbyte(rank('A')+i);
			end;
			locate(1); t:-blanks(5); intext(t); trace("Test2: " & t);
			
			for i:=1 step 1 until 5 do begin
				outtext("Text " & edit(i));
			end;

			locate(1); t:-blanks(35); intext(t);
%			sysout.outtext(t); outimage;
			trace("Test2: " & t);

			for i:=2,3,1,5,4 do begin
				j := i*6;
				locate(j);
				t:-blanks(6); intext(t);
%				sysout.outtext("Test2: LOC " & edit(j) & ": " & t); outimage;
				trace("Test2: LOC " & edit(j) & ": " & t);
			end;
			
			for i:=12,27 do begin
				locate(i); trace("Test2: At loc " & edit(i) & ": " & edit(char(inbyte)));
			end;
			locate(55); trace("Test2: At loc 55: " & edit(inbyte));
			locate(88); outbyte(88);
			locate(55); trace("Test2: At loc 55: " & edit(inbyte));

			setaccess("PURGE");
			close; 
		end; 	
   end;
   
   
   facit(0):-"Test1: Before open endfil=false";
   facit(1):-"Test1: Before open location=0";
   facit(2):-"Test1: Before open maxloc=0";
   facit(3):-"Test1: After open endfil=true";
   facit(4):-"Test1: After open location=1";
   facit(5):-"Test1: After open maxloc=2147483646";
   facit(6):-"Test1: After open lastloc=0";
   facit(7):-"Test1: At loc 2: 2";
   facit(8):-"Test1: At loc 3: 3";
   facit(9):-"Test1: At loc 1: 1";
   facit(10):-"Test1: At loc 5: 5";
   facit(11):-"Test1: At loc 4: 4";
   facit(12):-"Test1: After locate(4) endfil=false";
   facit(13):-"Test1: After locate(4) location=4";
   facit(14):-"Test1: After locate(4) lastloc=5";
   facit(15):-"Test1: After locate(6) endfil=true";
   facit(16):-"Test2: BCDEF";
   facit(17):-"Test2: BCDEFText 1Text 2Text 3Text 4Text 5";
   facit(18):-"Test2: LOC 12: Text 2";
   facit(19):-"Test2: LOC 18: Text 3";
   facit(20):-"Test2: LOC 6: Text 1";
   facit(21):-"Test2: LOC 30: Text 5";
   facit(22):-"Test2: LOC 24: Text 4";
   facit(23):-"Test2: At loc 12: T";
   facit(24):-"Test2: At loc 27: t";
   facit(25):-"Test2: At loc 55: 0";
   facit(26):-"Test2: At loc 55: 0";

   test1;
   test2;
   


end of program;
