
% ===============================================   Main   program =============
%  PROGRAM NAME:   Simula a.s. - SIMULA TEST NO 66
%
%  PURPOSE:     Test corutines and two infiles which read from the same file.
%
%  WRITTEN BY:  BEH   07/08-86
% ==============================================================================
external class SimulaTest;

SimulaTest(66,"--- Test corutines and two infiles which read from the same file.") begin
   
--   text fileName="C:/GitHub/SimulaCompiler/Simula/src/simulaTestBatch/files/any66";
   text fileName="C:/GitHub/SimulaCompiler/Simula/src/simulaTestBatch/files/any66";

   class InputFile(neste, navn, a);
      value navn;
      ref(InputFile) neste;
      text navn;
      integer a;
   begin
      ref(InFile) fil;
      integer lnr;
      text array linjer(1:200);


      procedure trace(msg); text msg;
      begin
         if verbose then
         begin
            outtext(msg & " - NAVN=" & navn & " - a,lnr=");
            outint(a,3); outint(lnr,3);
            outimage;
         end;   
      end;


      fil :- new InFile(navn);
      if not fil.open(blanks(100)) then
      begin outtext("The file does not exist,");
            outtext("or cannot be opened as infile.");  outimage;
            
            error("Can't open infile: " & navn);
      end;

      trace("RETT FØR FØRSTE DETACH I INFILE: ");
      detach;

      trace("RETT FØR FØRSTE INIMAGE I INFILE: ");
      fil.inimage;
      trace("RETT ETTER FØRSTE INIMAGE(" & copy(fil.image) & ") I INFILE: ");

      while not fil.endfile do
      begin
         for lnr := lnr+1 while not fil.endfile and lnr<201 do
         begin
            linjer(lnr) :- copy(fil.image);
            fil.inimage;
            trace("RETT ETTER NESTE INIMAGE(" & copy(fil.image) & ") I INFILE: ");
         end;

         resume(neste)
      end;

      while not neste.fil.endfile do resume(neste);

   end;

   ref(InputFile) fil1, fil2;

   boolean procedure OK(f1, f2, l);
      ref(InputFile) f1, f2;
      integer l;
   if l > f1.lnr and l > f2.lnr then
      OK := true
   else
      OK := f1.linjer(l) = f2.linjer(l) and OK(f1, f2, l+1);

   
   

   fil1 :- new InputFile(new InputFile(none, fileName, 5), fileName, 13);
   fil2 :- fil1.neste;
   fil2.neste :- fil1;

   resume(fil1);

   if not OK(fil1, fil2, 1) then
   begin
      integer i;
      err("Reading from file.");
      outtext("            Lines read from file :");
      outimage; outimage;
      for i := 1 step 1 until fil1.lnr, i+1 step 1 until fil2.lnr do
      begin
         outtext(" 1 : "); outtext(fil1.linjer(i)); outimage;
         outtext(" 2 : "); outtext(fil2.linjer(i)); outimage;
         outimage;
      end;
   end;

 end
