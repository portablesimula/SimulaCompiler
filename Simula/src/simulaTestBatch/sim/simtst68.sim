
% ===============================================   Main   program =============
%  PROGRAM NAME:   Simula a.s. - SIMULA TEST NO 68
%
%  PURPOSE:     Test of coroutines.
%
%  WRITTEN BY:  BEH   08/08-86
% ==============================================================================
external class SimulaTest;

SimulaTest(68,"--- Test of coroutines.") begin

   text array lines, facit(1:20);
   integer lnr;

   procedure Saveline;
   begin
      lnr := lnr + 1;
      lines(lnr) :- copy(sysout.image.strip);
      sysout.image.setpos(1);
      sysout.image := notext
   end;

   procedure Checklines(n, e);
      integer n, e;
   begin
      boolean Ok;
      integer i;

      Ok := true;

      if n = lnr then
      begin
         for i := 1 step 1 until n do
         if lines(i) <> facit(i) then
            Ok := false;
      end else
         Ok := false;

      if not Ok then
      begin
         err("Failed");
         outtext("Coroutines(");
         outint(e, if e < 10 then 1 else 2);
         outtext(")."); outimage;
         outtext("            Erroneus output : lnr = ");
         outint(lnr, 3); outimage;
         for i := 1 step 1 until lnr do
         begin
            outtext("                 ");
            outtext(lines(i)); outimage;
         end;
         outimage;
      end;

      for i := 1 step 1 until 20 do
         lines(i) :- facit(i) :- notext;
      lnr := 0;

   end pros. checklines;


   character c1, c2;

   procedure trace(msg); text msg;
   begin
      if verbose then
      begin
         outtext(msg & " - C1="); outchar(c1);
         outtext(", C2="); outchar(c2);
         outimage;
      end;   
   end;


   class Coroutine;
   begin
      trace("In Coroutine: Just before Detach");
      detach;
      trace("In Coroutine: Just after Detach");
   end;

   Coroutine class Reader;
   while true do
   begin
      c1 := inchar;
      trace("In Reader: Just before Detach");
      detach;
      trace("In Reader: Just after Detach");
   end;

   Coroutine class Changer;
   begin
      call(r);
      while true do
      begin
         if c1 = '*' then
         begin
            call(r);
            if c1 = '*' then
               c2 := '$'
            else
            begin
               c2 := '*';
               resume(w);
               c2 := c1
            end;
         end else c2 := c1;
         resume(w); call(r);
      end;
   end class changer;

   Coroutine class Writer;
   begin
      integer i;

      while true do
      begin
         for i := 1 step 1 until 15 do
         begin
            if c2 = '!' then
            begin
               Saveline;
               detach;
               goto R
            end else
            begin
               outchar(c2);
               resume(c)
            end;
         end;
         Saveline;
       R:
      end;
   end;

   ref(Coroutine) r, c, w;

   trace("Before new Reader");
   r :- new Reader;
   trace("Before new Changer");
   c :- new Changer;
   trace("Before new Write");
   w :- new Writer;

   sysin.image := "|lhkjdfjg*fdgh*98dsgh**kjdk*sgjfhgh***kljhasdg*kfhgs!ksdf";
   sysin.image.setpos(1);

   resume(c);

   facit(1) :- "|lhkjdfjg*fdgh*";
   facit(2) :- "98dsgh$kjdk*sgj";
   facit(3) :- "fhgh$*kljhasdg*";
   facit(4) :- "kfhgs";

   Checklines(4, 1);

   sysin.image.setpos(1);
   sysin.image := "hi*auer****5tp9a**e598yu5e*890u**yj89u***53pq**98790!";

   resume(c);

   facit(1) :- "hi*auer$$5tp9a$";
   facit(2) :- "e598yu5e*890u$y";
   facit(3) :- "j89u$*53pq$9879";
   facit(4) :- "0";

   Checklines(4, 2);

 end
