
% ===============================================   Main   program =====
%  PROGRAM NAME:   Simula a.s - SIMULA TEST NO 94
%
%  PURPOSE:     Test Simset - first, last, empty, cardinal and clear.
%
%  DEPENDS ON:  Simtest-93
%
%
%  WRITTEN BY:  BEH   12/01-87
%
% ======================================================================

begin
	integer nnn=94; text title="--- Test Simset - first, last, empty, cardinal and clear.";
	
	boolean found_error;
	integer nFailed;
	boolean verbose=false;
	boolean noMessage;

	procedure err(t); text t;
	begin sysout.setpos(1);
	      outtext("*** error: in test "); outtext(t); outimage;
	      found_error:=true; nFailed:=nFailed+1;
	end;

	if verbose then begin
		outtext ("--- START Simula a.s. TEST"); outint(nnn,4); outimage;
		outtext (title);
		outimage; outimage;
	end;


   Simset begin
          Link class Bead(i); integer i;;

          Link class A;;

          procedure Skrivpeker(r); ref(Linkage) r;
          begin inspect r when Bead do begin outtext("Bead - ");
                                             outint(i,4) end
                          when A    do outtext("A")
                          when Link do outtext("Link")
                          when Head do outtext("Head")
                          when Linkage do outtext("Linkage")
                otherwise              outtext("none");
                outimage;
          end;

          ref(A) Ar;
          ref(Head) chain; integer j; ref(Bead) r,s; ref(Linkage) x;
		  
          chain:-new Head;
          if chain.first == none and
             chain.last  == none and
             chain.empty         and
             chain.cardinal = 0 then
          else
          begin err(" Values of attributes of Head (1).");
                outimage;
                outtext("            First:       ");
                Skrivpeker(chain.first);
                outtext("            Last:       ");
                Skrivpeker(chain.last);
                outtext("            Empty:      ");
                outtext(if chain.empty then "true" else "false");
                outimage;
                outtext("            Cardinal:   ");
                outint(chain.cardinal,5);
                outimage;
                
          end;


          for j:=1 step 1 until 5 do new Bead(j).into(chain);
          if chain.first=/=none and !then; chain.first is Bead and
             (chain.first) qua Bead.i=1                          and
             chain.last=/=none and !then; chain.last is Bead and
             (chain.last) qua Bead.i=5                           and
             not chain.empty                                   and
             chain.cardinal=5                                  then
          else
          begin err(" Values of attributes of Head (2).");
                outimage;
                outtext("            First:       ");
                Skrivpeker(chain.first);
                outtext("            Last:       ");
                Skrivpeker(chain.last);
                outtext("            Empty:      ");
                outtext(if chain.empty then "true" else "false");
                outimage;
                outtext("            Cardinal:   ");
                outint(chain.cardinal,5);
                outimage;
                
          end;

          chain.first.into(chain);
          chain.first.precede(chain.last);
          chain.last.follow(chain.first.suc);
          chain.first.suc.suc.follow(chain.last.pred.pred);
          if (chain.first) qua Bead.i=3 and
             (chain.last)  qua Bead.i=2 and
             not chain.empty          and
             chain.cardinal=4         then
          else
          begin err(" Values of attributes of Head (3).");
                outimage;
                outtext("            First:       ");
                Skrivpeker(chain.first);
                outtext("            Last:       ");
                Skrivpeker(chain.last);
                outtext("            Empty:      ");
                outtext(if chain.empty then "true" else "false");
                outimage;
                outtext("            Cardinal:   ");
                outint(chain.cardinal,5);
                outimage;
                
          end;

          x:-chain;
          for x:-x.suc while x=/=none do
          begin r:-x qua Bead; j:=r.i;
                if j=(j//2)*2 then begin r.out; r.into(chain) end
          end;
          if (chain.first) qua Bead.i=3 and                      !3152;
             (chain.last)  qua Bead.i=4 and
             not chain.empty          and
             chain.cardinal=4         then
          else
          begin err(" Values of attributes of Head (4).");
                outimage;
                outtext("            First:       ");
                Skrivpeker(chain.first);
                outtext("            Last:       ");
                Skrivpeker(chain.last);
                outtext("            Empty:      ");
                outtext(if chain.empty then "true" else "false");
                outimage;
                outtext("            Cardinal:   ");
                outint(chain.cardinal,5);
                outimage;
                
          end;

          new A.follow(chain);
          if chain.first is A         and
             (chain.last)  qua Bead.i=4 and
             not chain.empty          and
             chain.cardinal=5         then
          else
          begin err(" Values of attributes of Head (5).");
                outimage;
                outtext("            First:       ");
                Skrivpeker(chain.first);
                outtext("            Last:       ");
                Skrivpeker(chain.last);
                outtext("            Empty:      ");
                outtext(if chain.empty then "true" else "false");
                outimage;
                outtext("            Cardinal:   ");
                outint(chain.cardinal,5);
                outimage;
                
          end;

          new A.precede((chain.first.prev) qua Head.last.pred);
          if chain.first is A         and
             (chain.last)  qua Bead.i=4 and
             not chain.empty          and
             chain.cardinal=6         then
          else
          begin err(" Values of attributes of Head (6).");
                outimage;
                outtext("            First:       ");
                Skrivpeker(chain.first);
                outtext("            Last:       ");
                Skrivpeker(chain.last);
                outtext("            Empty:      ");
                outtext(if chain.empty then "true" else "false");
                outimage;
                outtext("            Cardinal:   ");
                outint(chain.cardinal,5);
                outimage;
                
          end;

          chain.clear;
          if chain.first == none and
             chain.last  == none and
             chain.empty         and
             chain.cardinal = 0 then
          else
          begin err(" Values of attributes of Head (7).");
                outimage;
                outtext("            First:       ");
                Skrivpeker(chain.first);
                outtext("            Last:       ");
                Skrivpeker(chain.last);
                outtext("            Empty:      ");
                outtext(if chain.empty then "true" else "false");
                outimage;
                outtext("            Cardinal:   ");
                outint(chain.cardinal,5);
                outimage;
                
          end;

     end prefix block;


	if noMessage then else begin
		if not found_error then begin
			outtext ("--- NO ERRORS FOUND IN TEST"); outint(nnn,4); outtext("  "); outtext(title); outimage;
		end;

		if verbose then begin
			outtext ("--- END Simula a.s. TEST"); outint(nnn,4); outimage;
		end;
	end;

end of program;
