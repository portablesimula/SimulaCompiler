
% ==============================   Main   program  ===========
%  PROGRAM NAME:  Simula a.s. - SIMULA TEST  NO 5
%
%  PURPOSE:  To test the relops =, <, <=, >, >= and <> (eq, lt, le, gt,
%            ge and ne) for reals and integers.
%
%  METHOD:  Use the relops on various numeric values.
%
%  NOTES:  - significant only if max/min constants and add/sub eps not avail:
%         1. At lines commented with NOTE 1 : The max/min legal integer value
%            on your implementation must be filled in as explained.
%         2. At lines commented with NOTE 2 : The max/min legal short integer
%            value on your implementation must be filled in as explained.
%         3. At lines commented with NOTE 3 : The max/min legal real value
%            on your implemetation must be filled in as explained.
%         4. At lines commented with NOTE 4 : The max/min legal real value
%            with dobble precition must be filled in as explained.
%
%  WRITTEN BY:  THE  14/10-83
% ==============================================================================
begin
	integer n=5; text title="--- Test arithm. relations";
	
	boolean found_error;
	integer nFailed;
	boolean verbose=true;
	boolean noMessage;

	procedure err(t); text t;
	begin sysout.setpos(1);
	      outtext("*** error: in test "); outtext(t); outimage;
	      found_error:=true; nFailed:=nFailed+1;
	end;

integer            i1;                ! To be compared by the relops;
integer            i2;                ! To be compared by the relops;
short integer      s1;                ! To be compared by the relops;
short integer      s2;                ! To be compared by the relops;
real               r1;                ! To be compared by the relops;
real               r2;                ! To be compared by the relops;
long real          l1;                ! To be compared by the relops;
long real          l2;                ! To be compared by the relops;

integer            maxpint;           ! To contain max pos int value;
integer            maxnint;           ! To contain max neg int value;
short integer      maxpshort;         ! To contain max pos short int;
short integer      maxnshort;         ! To contain max neg short int;
real               maxpreal;          ! To contain max pos real val.;
real               minpreal;          ! To contain min pos real val.;
real               maxnreal;          ! To contain max neg real val.;
real               minnreal;          ! To contain min neg real val.;
long real          maxplreal;         ! To contain max pos long real ;
long real          minplreal;         ! To contain min pos long real ;
long real          maxnlreal;         ! To contain max neg long real ;
long real          minnlreal;         ! To contain min neg long real ;

                                      !********* NOTE 1 ************;
maxpint :=  maxint;                   ! Fill in max positiv and    ;
maxnint :=  minint;                   ! negative integer value.    ;
                                       !********* NOTE 2 ************;
maxpshort :=  32767;                  ! Fill in max positive and   ;
maxnshort := -32768;                  ! negative short integer value;
                                       !********* NOTE 3 ************;
maxpreal :=  maxreal;                 ! Fill in max and min positive;
minpreal :=  addepsilon(0.0);         ! and negative real value with;
maxnreal :=  minreal;                 ! real precision.             ;
minnreal :=  subepsilon(0.0);
                                       !********* NOTE 4 ************;
maxplreal :=  maxlongreal;             ! Fill in max and min positive;
minplreal :=  addepsilon(0.0&&0);      ! and negative real value with;
maxnlreal :=  minlongreal;             ! long real precision.       ;
minnlreal :=  subepsilon(0.0&&0);
                                       !*****************************;
                                       ! Test relops on integers.   ;
                                       !*****************************;
if         i1 eq 0  and not i1 <  i2
   and     i1 <= i2 and not i1 >  i2
   and      0 >= i2 and not i1 <> i2  then
else  err("INT.1 (comparing INTEGERs)");

i1 := 50;  ! i2 = 0;

if     not i1 = i2  and not i1 lt  0
   and not 99 <= i2 and     i1 >  i2
   and     i1 >= i2 and     i1 <> i2  then
else  err("INT.2 (comparing INTEGERs)");

i1 := i2; ! = 0;   i2 := 100;

if     not i1 = i2  and     i1 <  i2
   and     i1 le  1 and not  0 >  i2
   and not i1 >= i2 and     i1 <> i2  then
else  err("INT.3 (comparing INTEGERs)");

i1 := i2; ! = 100;

if         i1 = i2  and not i1 < 100
   and     i1 <= i2 and not i1 gt i2
   and    100 >= i2 and not i1 <> i2  then
else  err("INT.4 (comparing INTEGERs)");

i2 := maxpint;  ! i1 = 100 ;

if     not i1 =  i2 and     i1 <  101
   and      1 <= i2 and not i1 >  i2
   and not i1 ge i2 and     i1 <> i2  then
else  err("INT.5 (comparing INTEGERs)");

i2 := 50;  ! i1 = 100;

if     not i1 =  49 and not i1 <  i2
   and not i1 <= i2 and     i1 >  3
   and     i1 >= i2 and     i1 ne i2  then
else  err("INT.6 (comparing INTEGERs)");

i2 := -1;  ! i1 = 100;

if     not i1 eq -18 and not i1 <  i2
   and not i1 <= i2  and      1 >  i2
   and     i1 >= i2  and     i1 <> i2  then
else  err("INT.7 (comparing INTEGERs)");

i1 := -33;  i2 :=   1;

if     not i1 = i2   and     i1 lt i2
   and     i1 <= i2  and not i1 >  i2
   and not -3 >= i2  and     i1 <> 55  then
else  err("INT.8 (comparing INTEGERs)");

i1 :=  0;   i2 := -10;

if     not  0 =  i2 and not i1 <  -23
   and not i1 le i2 and     i1 >  i2
   and     i1 >= i2 and     i1 <> i2  then
else  err("INT.9 (comparing INTEGERs)");

i2 := i1;  ! = 0;   i1 := -1003;

if     not i1 = i2  and     i1 <   0
   and     i1 <= i2 and not -4 gt i2
   and not i1 >= i2 and     i1 <> i2  then
else  err("INT.10 (comparing INTEGERs)");

i2 := i1;  ! = -1003;

if         i1 =  i2 and not i1 <  -1003
   and     i1 <= i2 and not i1 >  i2
   and     i1 ge i2 and not i1 <> i2  then
else  err("INT.11 (comparing INTEGERs)");

i2 := -2000;  ! i1 = -1003;

if     not i1 =  -3200 and not i1 <  i2
   and not i1 <= i2    and     i1 >  i2
   and     -1 >= i2    and     i1 ne i2  then
else  err("INT.12 (comparing INTEGERs)");

                                       !*****************************;
                                       ! Test relops on short       ;
                                       ! integers and between short ;
                                       ! and "normal" integers.     ;
                                       !*****************************;
s1 := 68; ! s2 := 0;

if     not s1 =  s2    and not s1 <  s2
   and     s1 <= 100   and not  0 >  s2
   and     s1 >= s2    and     s1 <> s2   then
else  err("SINT.1 (comparing short INTEGERs)");

s1 := 10;   s2 :=maxnshort;  ! i2 = -2000, i1 = -1003;

if     not 68 =  s2    and not s1 <  s2
   and not i2 <= s2    and     s1 >  s2
   and     s1 >= s2    and not s1 <> 10   then
else  err("SINT.2 (comparing short INTEGERs)");

s1 := -5;   s2 := -800;  ! i2 = -2000, i1 = -1003;

if     not s1 =  s2    and not s1 <  s2
   and     s1 <= -5    and     s1 >  s2
   and     s1 >= s2    and     s1 <> s2   then
else  err("SINT.3 (comparing short INTEGERs)");
                                       !*****************************;
                                       ! Test relops on reals.      ;
                                       !*****************************;

if                 r1  = 0.0000&00  and not        0.0 <  r2
   and             r1 <= r2         and not         r1  > r2
   and             r1 >= r2         and not         r1 <> r2  then
else  err("real.1 (comparing REALs)");

r1 := minpreal;   r2 := 0;

if                 r2  = 0&0        and not         r1 <  r2
   and not         r1 <= r2         and             r1  > r2
   and             r1 >= r2         and             r1 <> r2  then
else  err("real.2 (comparing REALs)");

r1 := 0.00;  r2 := 3.4567&7;

if                 r1  = r1         and             r1 <  8.8&1
   and             r1 <= r2         and not         r1  > r2
   and not        0&1 >= r2         and             r1 <> r2  then
else  err("real.3 (comparing REALs)");

r2 := r1;  ! = 0.0;

if                 r1  = r2         and not         r1 <  r2
   and             r2 <= r1         and not         r1  > r2
   and             r1 >= r2         and not         r2 <> r1  then
else  err("real.4 (comparing REALs)");

r2 := 3.4568&7;  ! r1 = 0.0;

if                 r2  = r2         and             r1 <  r2
   and             r1 <= r2         and not         r1  > r2
   and not         r1 >= 34.568&6   and             r1 <> r2  then
else  err("real.5 (comparing REALs)");

r1 := 20;  r2 := 20&10;

if                 r1  = r1         and             r1 <  r2
   and           1&-1 <= r2         and not         r1  > r2
   and not         r1 >= r2         and             r1 <> r2  then
else  err("real.6 (comparing REALs)");

r1 := maxnreal;   r2 := minpreal;

if                 r1  = r1         and             r1 <  r2
   and         -.1&00 <= r2         and not         r1  > .00002&0
   and not         r1 >= r2         and             r1 <> r2  then
else  err("real.7 (comparing REALs)");

r1 := maxpreal;   r2 := -222222&-8;

if                 r2  = r2         and not 2.3456&+01 <  r2
   and not         r1 <= r2         and             r1  > -1.1&0
   and             r1 >= r2         and             r1 <> r2  then
else  err("real.8 (comparing REALs)");

r1 := 0;  r2 := -58.9;

if                 r1  = -0.0000&-6 and not       0&00 <  r2
   and not         r1 <= r2         and             r1  > r2
   and             r1 >= r2         and             r1 <> r2  then
else  err("real.9 (comparing REALs)");

r1 := -58.9;   ! r2 = -58.9;

if                 r1  = r2         and not         r2 <  r1
   and             r1 <= r2         and not         r1  > r2
   and             r2 >= r1         and not         r1 <> r2  then
else  err("real.10 (comparing REALs)");

r1 := maxnreal;! r2 = -58.9;

if                 r2  = r2         and             r1 <  r2
   and             r1 <= -22&-2     and not         r1  > r2
   and not         r1 >= r2         and             r1 <> r2  then
else  err("real.11 (comparing REALs)");
                                       !*****************************;
                                       ! Test relops on long reals. ;
                                       !*****************************;

if                 l1  = l2         and not         l1 <  l2
   and           0&&0 <= l2         and not         l1  > l2
   and             l1 >= 0.0&&7     and not         l1 <> l2  then
else  err("long.1 (comparing long REALs)");

l1 := maxplreal;   l2 := 28&&04;

if                 l1  = l1         and not   28.1&&04 <  l2
   and not         l1 <= l2         and             l1  > l2
   and             l1 >= l2         and             l1 <> l2  then
else  err("long.2 (comparing long REALs)");

l1 := minnlreal;   l2 := 0;

if                 l1  = l1         and             l1 <  l2
   and             l1 <= l2         and not         l1  > l2
   and not         l1 >= l2         and             l1 <> l2  then
else  err("long.3 (comparing long REALs)");
                                       !*****************************;
                                       ! Test relops between reals  ;
                                       ! and long reals.            ;
                                       !*****************************;
% r1 = maxnreal, r2 = -58.9, l1 = minnlreal, l2 = 0;

if                 l2  = 0&1        and             r1 <  l2
   and not         l1 <= r2         and not         r1  > l1
   and not         r1 >= 2&&10      and not         r2 <> r2  then
else  err("RL.1 (comparing real and long real)");
                                       !*****************************;
                                       ! Test relops between reals  ;
                                       ! and integers.              ;
                                       !*****************************;
% i2 = -2000, i1 = -1003, r1 = maxnreal, r2 = -58.9

if                 i2  = i2         and not         i1 <  r1
   and not         r2 <= i2         and             i2  > r1
   and not         r1 >= -100000    and             r2 <> i1  then
else  err("RI.1 (comparing real and integer)");
                                       !*****************************;
                                       ! Test relops between integers;
                                       ! and long reals.            ;
                                       !*****************************;
% i2 = -2000, i1 = -1003, l1 = minnlreal, l2 = 0;

if                 i2  = i2         and not         l1 <  i1
   and not         l2 <= i2         and not         l1  > 1
   and not         i1 >= l2         and             l2 <> i1  then
else  err("IL.1 (comparing integer and long real)");
                                       !*****************************;
                                       ! Test relops between reals  ;
                                       ! and short integers.        ;
                                       !*****************************;
% s1 = -5,  s2 = -800, r1 = maxnreal, r2 = -58.9, l1 = minnlreal, l2 = 0;

if                 s2  = s2         and not         s1 <  r1
   and             r1 <= s2         and             r2  > s2
   and not         r2 >= s1         and not         r1 <> r1  then
else  err("SR.1 (comparing short integer and real)");
                                       !*****************************;
                                       ! Test relops between short  ;
                                       ! integers and long reals.   ;
                                       !*****************************;
% s1 = -5,  s2 = -800, r1 = maxnreal, r2 = -58.9, l1 = minnlreal, l2 = 0;

if                 l1  = l1         and not         l2 <  s1
   and             s2 <= l2         and             l1  > s2
   and not         l1 >= 69         and             s2 <> -8.1&&2 then
else  err("SL.1 (comparing short integer and long real)");

                                       !******************************;
                                       ! the following tests may give ;
                                       ! run time errors because of   ;
                                       ! overflow in test - this is a ;
                                       ! serious error!!!             ;
                                       !******************************;
i1 := maxnint; i2 := maxpint;

outtext("*** error: OVERFLOW in test MAX.1 (COMPARING maxint and minint)");
if     not i1 =  i2   and     -2222 <  i2
   and     i1 =  i1   and   i2 =  i2
   and     i1 <= i2 and not i1 >  -1
   and not i1 >= i2 and     i1 <> i2
   and not i2 =  i1   and     -2222 >  i1
   and     i2 >= i1 and not i2 <  -1
   and not i2 <= i1 and     i2 <> i1  then
           begin inspect sysout do begin image:=notext; setpos(1) end end
else  err("MAX.1 (comparing INTEGERs)");

r1 := maxnreal; r2 := maxpreal;

outtext("*** error: OVERFLOW in test MAX.2 (COMPARING maxreal and minreal)");
if     not r1 =  r2   and     -2222 <  r2
   and     r1 =  r1   and   r2 =  r2
   and     r1 <= r2 and not r1 >  -1
   and not r1 >= r2 and     r1 <> r2
   and not r2 =  r1   and     -2222 >  r1
   and     r2 >= r1 and not r2 <  -1
   and not r2 <= r1 and     r2 <> r1  then
           begin inspect sysout do begin image:=notext; setpos(1) end end
else  err("MAX.2 (comparing REALs)");

l1 := maxnlreal; l2 := maxplreal;

outtext("*** error: OVERFLOW in test MAX.3 (COMPARING max- and minlongreal)");
if     not l1 =  l2   and     -2222 <  l2
   and     l1 =  l1   and   l2 =  l2
   and     l1 <= l2 and not l1 >  -1
   and not l1 >= l2 and     l1 <> l2
   and not l2 =  l1   and     -2222 >  l1
   and     l2 >= l1 and not l2 <  -1
   and not l2 <= l1 and     l2 <> l1  then
           begin inspect sysout do begin image:=notext; setpos(1) end end
else  err("MAX.3 (comparing long REALs)");


	if noMessage then else begin
		if not found_error then begin
			outtext ("--- NO ERRORS FOUND IN TEST"); outint(n,4); outtext("  "); outtext(title); outimage;
		end;

		if verbose then begin
			outtext ("--- END Simula a.s. TEST"); outint(n,4); outimage;
		end;
	end;

end of program;
