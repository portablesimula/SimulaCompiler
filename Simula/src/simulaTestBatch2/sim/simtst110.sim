% ===============================================   Main   program =============
%  PROGRAM NAME:   SIMULA TEST NO 110
%
%  PURPOSE: Simple Co-Routine Sample 3: detach - resume - chain
%
%  WRITTEN BY:  MYH   28/04-2019
% ==============================================================================

begin
	integer nnn=110; text title="--- Simple Co-Routine Sample 3: detach - resume - chain";
	
	boolean found_error;
	integer nFailed;
	boolean verbose=false;
	boolean noMessage;

	procedure err(t); text t;
	begin sysout.setpos(1);
	      outtext("*** error: in test "); outtext(t); outimage;
	      found_error:=true; nFailed:=nFailed+1;
	end;

   integer traceCase;
   text array facit(0:11);
   ref(ProducerClass) producer;
   ref(ConsumerClass) consumer;
    
   text procedure edint(i); integer i;
   begin text t; t:-blanks(6); t.putint(i); edint:-t; end;
   
   procedure trace(msg); text msg;
   begin
      if verbose then begin outtext(msg); outimage; end;
      if msg <> facit(traceCase) then
      begin
         err("ERROR in Case " & edint(traceCase));
         outtext("Trace: " & msg); outimage;
         outtext("Facit: " & facit(traceCase)); outimage;
      end;
      traceCase:=traceCase+1;
   end;
   
   class ProducerClass;
   begin
	  trace("producer:Init");
	  detach;
	  trace("producer:Part 1 - Statements");
	  resume(consumer);
	  trace("producer:Part 2 - Statements");
	  resume(consumer);
	  trace("producer:Part 3 - Statements");
	  resume(consumer);
   end;
   
   class ConsumerClass;
   begin
	  trace("consumer:Init");
	  detach;
	  trace("consumer:Part 1 - Statements");
	  resume(producer);
	  trace("consumer:Part 2 - Statements");
	  resume(producer);
	  trace("consumer:Part 3 - Statements");
	  resume(producer);
   end;
   

	if verbose then begin
		outtext ("--- START Simula a.s. TEST"); outint(nnn,4); outimage;
		outtext (title);
		outimage; outimage;
	end;
   
   facit(0):-"Main: Before new producer";
   facit(1):-"producer:Init";
   facit(2):-"Main: Before new consumer";
   facit(3):-"consumer:Init";
   facit(4):-"Main: Before first resume";
   facit(5):-"producer:Part 1 - Statements";
   facit(6):-"consumer:Part 1 - Statements";
   facit(7):-"producer:Part 2 - Statements";
   facit(8):-"consumer:Part 2 - Statements";
   facit(9):-"producer:Part 3 - Statements";
   facit(10):-"consumer:Part 3 - Statements";
   facit(11):-"Main: End of Program";
   
   begin
      trace("Main: Before new producer");
      producer:-new ProducerClass;
      trace("Main: Before new consumer");
      consumer:-new ConsumerClass;
      trace("Main: Before first resume");
      resume(producer);
      trace("Main: End of Program");
   end subBlock;
   

	if noMessage then else begin
		if not found_error then begin
			outtext ("--- NO ERRORS FOUND IN TEST"); outint(nnn,4); outtext("  "); outtext(title); outimage;
		end;

		if verbose then begin
			outtext ("--- END Simula a.s. TEST"); outint(nnn,4); outimage;
		end;
	end;

end of program;
