begin  comment Rob Pooley's game example, recasted;
  integer  count;
  character null;
  character array board( 1 : 3, 1 : 3 ); 
  ref(Crosser)   Cross_Player;
  ref(Noughter) Nought_Player;  

  class Player(symb); character symb;
   virtual: procedure Move is procedure Move;;
  begin integer i, j; ref(Player) oponent;
    
    procedure Print; comment ==== print board ===;
    begin
      for   i := 1 step 1 until 3 do begin
        for j := 1 step 1 until 3 do 
            OutChar( board( i, j ) );
        OutImage;
      end;
      OutImage;
    end of Print ================================;

    Boolean procedure Done; comment=check status=;
    begin character winner;
      if (board(1,1)=board(2,2) and board(2,2)=board(3,3)) or
         (board(1,3)=board(2,2) and board(2,2)=board(3,1)) 
      then winner := board(2,2) 
      else for i := 1, i + 1 while i <= 3 and winner = null do 
             if board(i,1)=board(i,2) and board(i,2)=board(i,3) then
                winner := board(i,2)
             else
             if board(1,i)=board(2,i) and board(2,i)=board(3,i) then
                winner := board(2,i);      
      if winner <> null then begin
         OutText( "The winner is " ); OutChar(winner); OutImage;
         Done := TRUE;
      end;
    end of Done =================================;
    
    Detach;
    while not Done do begin
      Move;
      board( i, j ) := symb;
      Print;
      count := count + 1; 
      if count < 9 then Resume(oponent)
      else begin outtext( "No winner..." ); Detach; end;
    end;
  end of Player;
  
  Player class Noughter;
  begin
    procedure Move;
    begin Boolean ok;
      while not ok do begin
        Outtext( "Give position for nought as i,j : " ); BreakOutimage;
        i:=InInt; InChar; j:=InInt; ok := board(i,j)=null;
      end;
    end Move;
  end of Noughter;
    
  Player class Crosser;
  begin
    procedure Move;
    begin 
      for i := 1 step 1 until 3 do
      for j := 1 step 1 until 3 do
        if board( i, j ) = null then go to exit;  exit:
      Outtext("Crosser's turn:"); Outimage;
    end Move;
  end of Crosser;

  Cross_Player          :- new Crosser ( 'X' );
  Nought_Player         :- new Noughter( 'O' );
  Cross_Player .oponent :- Nought_Player;
  Nought_Player.oponent :- Cross_Player;
  
  Resume(Cross_Player);
end
