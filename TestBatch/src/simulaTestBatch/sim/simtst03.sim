
% ========================================   Main   program  ===========
%  PROGRAM NAME:  Simula a.s. - SIMULA TEST  NO 3
%
%  PURPOSE:  To test the relational operators  =  <>  <  <=  >  >= 
%            (eq, ne, lt, le, gt and ge) on texts.
%
%  METHOD:  Use the operators on various text values.
%
%  NOTE:  1. In the lines commented with NOTE 1: The largest permitted
%            text.length on your implementation must be filled in.
%
%         2. The test assumes that ranking of characters and digits is
%            equivalent to the ISO ranking.
%
%  WRITTEN BY:  THE  15/09-83
% ======================================================================
external class SimulaTest;

SimulaTest(3,"--- Test text value relations") begin

text    t1;      -- Texts to take on the
text    t2;      -- various values for the test.
integer maxtext; -- To contain the maximum text constant length.

maxtext := 32000; -- Max text constant length --- must be filled in. 

--********** Start with both texts empty
if t1 <> notext  then err ("***  Equality between empty texts not recognized (1).");
if t1 =  t2 then else err ("***  Equality between empty texts not recognized (2).");
if t1 <> t2 then      err ("***  Equality between empty texts not recognized (3).");
if t1 <  t2 then      err ("***  Equality between empty texts not recognized (4).");
if t1 <= t2 then else err ("***  Equality between empty texts not recognized (5).");
if t1 >  t2 then      err ("***  Equality between empty texts not recognized (6).");
if t1 >= "" then else err ("***  Equality between empty texts not recognized (7).");

--********** Now assign a value to one of the texts.
t1 :- blanks (10);
if t1 <> "          " then err ("***  Equality betw. non empty texts not recognized (1).");
if t1 =  t2 then      err ("***  Non empty text equal to empty text (1).");
if t1 <> t2 then else err ("***  Non empty text equal to empty text (2).");
if t1 <  t2 then      err ("***  Non empty text less than empty text.");
if t1 <= t2 then      err ("***  Non empty text less than or equal to empty text.");
if t1 >  t2 then else err ("***  Non empty text not greater than empty text (1).");
if t1 >= t2 then else err ("***  Non empty text not greater than empty text (2).");

--********** Now make the two texts equal.
t1 := "abcdefghij"; t2 :- copy (t1);
if t2 <> "abcdefghij" then err ("***  Equality betw. non empty texts not recognized (2).");
if t1 =  t2 then else err ("***  Equality betw. non empty texts not recognized (3).");
if t1 <> t2 then      err ("***  Equality betw. non empty texts not recognized (4).");
if t1 <  t2 then      err ("***  Equality betw. non empty texts not recognized (5).");
if t1 <= t2 then else err ("***  Equality betw. non empty texts not recognized (6).");
if t1 >  t2 then      err ("***  Equality betw. non empty texts not recognized (7).");
if t1 >= t2 then else err ("***  Equality betw. non empty texts not recognized (8).");

--********** Make one text longer than the other.
t2 :- blanks (15); t2 := t1;
if t2 <> "abcdefghij     " then err ("***  Equality betw. non empty texts not recognized (9).");
if t1 =  t2 then      err ("***  Non-eq. betw. non empty texts not recognized (1).");
if t1 <> t2 then else err ("***  Non-eq. betw. non empty texts not recognized (2).");
if t1 <  t2 then else err ("***  Wrong ranking of texts (1).");
if t1 <= t2 then else err ("***  Wrong ranking of texts (2).");
if t1 >  t2 then      err ("***  Wrong ranking of texts (3).");
if t1 >= t2 then      err ("***  Wrong ranking of texts (4).");
   
--********** Give texts equal length but different contens.
t1 :- copy ("SIMULA 67"); t2 :- copy ("SIMULA 83");
if t1 =  t2 then      err ("***  Non-eq. betw. non empty texts not recognized (3).");
if t1 <> t2 then else err ("***  Non-eq. betw. non empty texts not recognized (4).");
if t1 <  t2 then else err ("***  Wrong ranking of texts (5).");
if t1 <= t2 then else err ("***  Wrong ranking of texts (6).");
if t1 >  t2 then      err ("***  Wrong ranking of texts (7).");
if t1 >= t2 then      err ("***  Wrong ranking of texts (8).");
   
--********** Try some relops on maximum sized texts.
t1 :- blanks (maxtext); t1 := "long text";
t2 :- blanks (maxtext); t2 := "very long text";
if t1 = t2 then err ("***  Non-equal. betw. max length texts not recognized.");
if t1 < t2 then else err ("***  Wrong ranking of texts (9).");
if t1 > t2 then err ("***  Wrong ranking of texts (10).");

--********** Try with one character texts.
t1 :- copy ("v");
if t1 = "v" then t2:-copy ("%") else t2:-blanks (1);
!*** not cond.expr, that's not what's being tested!!!;

if t2 <> "%" then err ("***  Equality between one char. texts not recognized.");
if t1 = t2 then err ("***  Non-eq. betw. one char. texts not recognized.");
if t1 < t2 then err ("***  Wrong ranking of one character texts (1).");
if t1 > t2 then else err ("***  Wrong ranking of one character texts (2).");


end of program;
